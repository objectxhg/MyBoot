2020-11-16 11:27:11,296:INFO main (StartupInfoLogger.java:55) - Starting MyBootApplication on DESKTOP-N2UAHBH with PID 13748 (D:\idea-work\MyBoot\target\classes started by xiaoh in D:\idea-work\MyBoot)
2020-11-16 11:27:11,313:INFO main (SpringApplication.java:655) - The following profiles are active: dev
2020-11-16 11:27:16,126:INFO main (RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-16 11:27:16,137:INFO main (RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-16 11:27:16,287:INFO main (RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 41ms. Found 0 Redis repository interfaces.
2020-11-16 11:27:17,562:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'asyncTaskConfig' of type [com.xhg.threadPool.AsyncTaskConfig$$EnhancerBySpringCGLIB$$998dc131] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 11:27:17,788:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 11:27:24,919:INFO main (TomcatWebServer.java:92) - Tomcat initialized with port(s): 9000 (http)
2020-11-16 11:27:24,999:INFO main (DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-9000"]
2020-11-16 11:27:25,002:INFO main (DirectJDKLog.java:173) - Starting service [Tomcat]
2020-11-16 11:27:25,004:INFO main (DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-11-16 11:27:27,038:INFO main (DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-11-16 11:27:27,039:INFO main (ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 15650 ms
2020-11-16 11:27:31,402:INFO main (PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-16 11:27:31,412:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService
2020-11-16 11:27:31,413:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskExecutor'
2020-11-16 11:27:32,216:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskScheduler'
2020-11-16 11:27:32,271:INFO main (DocumentationPluginsBootstrapper.java:160) - Context refreshed
2020-11-16 11:27:32,302:INFO main (DocumentationPluginsBootstrapper.java:163) - Found 1 custom documentation plugin(s)
2020-11-16 11:27:32,322:INFO main (ApiListingReferenceScanner.java:41) - Scanning for api listing references
2020-11-16 11:27:32,506:INFO main (AbstractConnectionFactory.java:524) - Attempting to connect to: [121.43.158.136:5672]
2020-11-16 11:27:32,652:INFO main (AbstractConnectionFactory.java:497) - Created new connection: rabbitConnectionFactory#5f0bab7e:0/SimpleConnection@2c34402 [delegate=amqp://userMQ@121.43.158.136:5672/hostDemo, localPort= 60698]
2020-11-16 11:27:33,272:INFO main (DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-9000"]
2020-11-16 11:27:33,286:INFO main (TomcatWebServer.java:204) - Tomcat started on port(s): 9000 (http) with context path '/boot'
2020-11-16 11:27:33,288:INFO main (StartupInfoLogger.java:61) - Started MyBootApplication in 25.581 seconds (JVM running for 27.588)
2020-11-16 11:31:21,156:INFO http-nio-9000-exec-3 (DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-16 11:31:21,157:INFO http-nio-9000-exec-3 (FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-11-16 11:31:21,167:INFO http-nio-9000-exec-3 (FrameworkServlet.java:547) - Completed initialization in 9 ms
2020-11-16 11:31:21,497:INFO http-nio-9000-exec-3 (EpollProvider.java:68) - Starting without optional epoll library
2020-11-16 11:31:21,499:INFO http-nio-9000-exec-3 (KqueueProvider.java:70) - Starting without optional kqueue library
2020-11-16 11:31:24,430:INFO http-nio-9000-exec-3 (HikariDataSource.java:110) - HikariPool-1 - Starting...
2020-11-16 11:31:24,928:INFO http-nio-9000-exec-3 (PoolBase.java:527) - HikariPool-1 - Driver does not support get/set network timeout for connections. (com.mysql.jdbc.JDBC4Connection.getNetworkTimeout()I)
2020-11-16 11:31:24,974:INFO http-nio-9000-exec-3 (HikariDataSource.java:123) - HikariPool-1 - Start completed.
2020-11-16 11:31:24,979:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 11:31:24,990:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 11:31:25,071:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 11:31:25,092:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 11:31:25,092:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 488157740491825152(Long), 8(Integer), 哈哈面膜(String), 2020-11-16 11:31:25.091(Timestamp)
2020-11-16 11:31:25,123:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 11:31:25,128:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 11:33:03,145:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, user_id, order_describe,order_updateTime from orders 
2020-11-16 11:33:03,147:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 
2020-11-16 11:33:03,210:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==      Total: 16
2020-11-16 11:38:32,827:INFO main (StartupInfoLogger.java:55) - Starting MyBootApplication on DESKTOP-N2UAHBH with PID 14444 (D:\idea-work\MyBoot\target\classes started by xiaoh in D:\idea-work\MyBoot)
2020-11-16 11:38:32,832:INFO main (SpringApplication.java:655) - The following profiles are active: dev
2020-11-16 11:38:33,390:INFO main (RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-16 11:38:33,392:INFO main (RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-16 11:38:33,412:INFO main (RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
2020-11-16 11:38:33,583:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'asyncTaskConfig' of type [com.xhg.threadPool.AsyncTaskConfig$$EnhancerBySpringCGLIB$$33624716] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 11:38:33,629:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 11:38:33,788:INFO main (TomcatWebServer.java:92) - Tomcat initialized with port(s): 9000 (http)
2020-11-16 11:38:33,794:INFO main (DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-9000"]
2020-11-16 11:38:33,794:INFO main (DirectJDKLog.java:173) - Starting service [Tomcat]
2020-11-16 11:38:33,794:INFO main (DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-11-16 11:38:33,906:INFO main (DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-11-16 11:38:33,906:INFO main (ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1046 ms
2020-11-16 11:38:34,552:INFO main (PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-16 11:38:34,564:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService
2020-11-16 11:38:34,565:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskExecutor'
2020-11-16 11:38:34,829:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskScheduler'
2020-11-16 11:38:34,861:INFO main (DocumentationPluginsBootstrapper.java:160) - Context refreshed
2020-11-16 11:38:34,871:INFO main (DocumentationPluginsBootstrapper.java:163) - Found 1 custom documentation plugin(s)
2020-11-16 11:38:34,889:INFO main (ApiListingReferenceScanner.java:41) - Scanning for api listing references
2020-11-16 11:38:35,021:INFO main (AbstractConnectionFactory.java:524) - Attempting to connect to: [121.43.158.136:5672]
2020-11-16 11:38:35,162:INFO main (AbstractConnectionFactory.java:497) - Created new connection: rabbitConnectionFactory#319642db:0/SimpleConnection@1a536164 [delegate=amqp://userMQ@121.43.158.136:5672/hostDemo, localPort= 60879]
2020-11-16 11:38:35,795:INFO main (DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-9000"]
2020-11-16 11:38:35,808:INFO main (TomcatWebServer.java:204) - Tomcat started on port(s): 9000 (http) with context path '/boot'
2020-11-16 11:38:35,810:INFO main (StartupInfoLogger.java:61) - Started MyBootApplication in 3.389 seconds (JVM running for 4.081)
2020-11-16 11:39:13,539:INFO http-nio-9000-exec-3 (DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-16 11:39:13,539:INFO http-nio-9000-exec-3 (FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-11-16 11:39:13,545:INFO http-nio-9000-exec-3 (FrameworkServlet.java:547) - Completed initialization in 6 ms
2020-11-16 11:39:13,670:INFO http-nio-9000-exec-3 (EpollProvider.java:68) - Starting without optional epoll library
2020-11-16 11:39:13,671:INFO http-nio-9000-exec-3 (KqueueProvider.java:70) - Starting without optional kqueue library
2020-11-16 11:39:14,269:INFO http-nio-9000-exec-3 (HikariDataSource.java:110) - HikariPool-1 - Starting...
2020-11-16 11:39:14,752:INFO http-nio-9000-exec-3 (PoolBase.java:527) - HikariPool-1 - Driver does not support get/set network timeout for connections. (com.mysql.jdbc.JDBC4Connection.getNetworkTimeout()I)
2020-11-16 11:39:14,797:INFO http-nio-9000-exec-3 (HikariDataSource.java:123) - HikariPool-1 - Start completed.
2020-11-16 11:39:14,802:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 11:39:14,812:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 11:39:14,877:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 11:39:14,885:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 11:39:14,885:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 488159710946484224(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 11:39:14.884(Timestamp)
2020-11-16 11:39:14,913:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 11:39:14,918:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 11:48:20,065:INFO main (StartupInfoLogger.java:55) - Starting MyBootApplication on DESKTOP-N2UAHBH with PID 10196 (D:\idea-work\MyBoot\target\classes started by xiaoh in D:\idea-work\MyBoot)
2020-11-16 11:48:20,078:INFO main (SpringApplication.java:655) - The following profiles are active: dev
2020-11-16 11:48:21,179:INFO main (RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-16 11:48:21,183:INFO main (RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-16 11:48:21,211:INFO main (RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
2020-11-16 11:48:21,534:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'asyncTaskConfig' of type [com.xhg.threadPool.AsyncTaskConfig$$EnhancerBySpringCGLIB$$8ac9ce58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 11:48:21,643:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 11:48:22,254:INFO main (TomcatWebServer.java:92) - Tomcat initialized with port(s): 9000 (http)
2020-11-16 11:48:22,270:INFO main (DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-9000"]
2020-11-16 11:48:22,271:INFO main (DirectJDKLog.java:173) - Starting service [Tomcat]
2020-11-16 11:48:22,271:INFO main (DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-11-16 11:48:22,456:INFO main (DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-11-16 11:48:22,456:INFO main (ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 2350 ms
2020-11-16 11:48:24,437:INFO main (PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-16 11:48:24,449:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService
2020-11-16 11:48:24,449:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskExecutor'
2020-11-16 11:48:24,861:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskScheduler'
2020-11-16 11:48:24,916:INFO main (DocumentationPluginsBootstrapper.java:160) - Context refreshed
2020-11-16 11:48:24,947:INFO main (DocumentationPluginsBootstrapper.java:163) - Found 1 custom documentation plugin(s)
2020-11-16 11:48:24,970:INFO main (ApiListingReferenceScanner.java:41) - Scanning for api listing references
2020-11-16 11:48:25,139:INFO main (AbstractConnectionFactory.java:524) - Attempting to connect to: [121.43.158.136:5672]
2020-11-16 11:48:25,267:INFO main (AbstractConnectionFactory.java:497) - Created new connection: rabbitConnectionFactory#78da899f:0/SimpleConnection@794c5f5e [delegate=amqp://userMQ@121.43.158.136:5672/hostDemo, localPort= 61517]
2020-11-16 11:48:25,888:INFO main (DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-9000"]
2020-11-16 11:48:25,946:INFO main (TomcatWebServer.java:204) - Tomcat started on port(s): 9000 (http) with context path '/boot'
2020-11-16 11:48:25,948:INFO main (StartupInfoLogger.java:61) - Started MyBootApplication in 6.828 seconds (JVM running for 10.237)
2020-11-16 11:48:38,996:INFO http-nio-9000-exec-5 (DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-16 11:48:38,997:INFO http-nio-9000-exec-5 (FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-11-16 11:48:39,002:INFO http-nio-9000-exec-5 (FrameworkServlet.java:547) - Completed initialization in 5 ms
2020-11-16 11:48:39,253:INFO http-nio-9000-exec-5 (EpollProvider.java:68) - Starting without optional epoll library
2020-11-16 11:48:39,254:INFO http-nio-9000-exec-5 (KqueueProvider.java:70) - Starting without optional kqueue library
2020-11-16 11:48:40,028:INFO http-nio-9000-exec-5 (HikariDataSource.java:110) - HikariPool-1 - Starting...
2020-11-16 11:48:40,517:INFO http-nio-9000-exec-5 (PoolBase.java:527) - HikariPool-1 - Driver does not support get/set network timeout for connections. (com.mysql.jdbc.JDBC4Connection.getNetworkTimeout()I)
2020-11-16 11:48:40,564:INFO http-nio-9000-exec-5 (HikariDataSource.java:123) - HikariPool-1 - Start completed.
2020-11-16 11:48:40,570:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 11:48:40,581:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 11:48:40,652:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 11:48:40,673:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 11:48:40,673:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 488162084033355776(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 11:48:40.672(Timestamp)
2020-11-16 11:48:40,704:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 11:48:40,708:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 14:48:15,897:INFO main (StartupInfoLogger.java:55) - Starting MyBootApplication on DESKTOP-N2UAHBH with PID 14660 (D:\idea-work\MyBoot\target\classes started by xiaoh in D:\idea-work\MyBoot)
2020-11-16 14:48:15,902:INFO main (SpringApplication.java:655) - The following profiles are active: dev
2020-11-16 14:48:16,594:INFO main (RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-16 14:48:16,596:INFO main (RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-16 14:48:16,615:INFO main (RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
2020-11-16 14:48:16,862:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'asyncTaskConfig' of type [com.xhg.threadPool.AsyncTaskConfig$$EnhancerBySpringCGLIB$$979b027a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 14:48:16,938:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 14:48:17,120:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 14:48:17,243:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 14:48:17,397:INFO main (TomcatWebServer.java:92) - Tomcat initialized with port(s): 9000 (http)
2020-11-16 14:48:17,403:INFO main (DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-9000"]
2020-11-16 14:48:17,403:INFO main (DirectJDKLog.java:173) - Starting service [Tomcat]
2020-11-16 14:48:17,403:INFO main (DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-11-16 14:48:17,476:INFO main (DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-11-16 14:48:17,476:INFO main (ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1543 ms
2020-11-16 14:48:18,186:INFO main (SentinelWebAutoConfiguration.java:80) - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-11-16 14:48:18,281:INFO main (PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-16 14:48:18,292:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService
2020-11-16 14:48:18,293:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskExecutor'
2020-11-16 14:48:18,577:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskScheduler'
2020-11-16 14:48:18,849:INFO main (DocumentationPluginsBootstrapper.java:160) - Context refreshed
2020-11-16 14:48:18,886:INFO main (DocumentationPluginsBootstrapper.java:163) - Found 1 custom documentation plugin(s)
2020-11-16 14:48:18,920:INFO main (ApiListingReferenceScanner.java:41) - Scanning for api listing references
2020-11-16 14:48:19,172:INFO main (AbstractConnectionFactory.java:524) - Attempting to connect to: [121.43.158.136:5672]
2020-11-16 14:48:19,296:INFO main (AbstractConnectionFactory.java:497) - Created new connection: rabbitConnectionFactory#7c70aae1:0/SimpleConnection@1de12397 [delegate=amqp://userMQ@121.43.158.136:5672/hostDemo, localPort= 62698]
2020-11-16 14:48:19,900:INFO main (DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-9000"]
2020-11-16 14:48:19,914:INFO main (TomcatWebServer.java:204) - Tomcat started on port(s): 9000 (http) with context path '/boot'
2020-11-16 14:48:20,010:INFO main (StartupInfoLogger.java:61) - Started MyBootApplication in 4.59 seconds (JVM running for 5.343)
2020-11-16 14:48:33,858:INFO http-nio-9000-exec-1 (DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-16 14:48:33,858:INFO http-nio-9000-exec-1 (FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-11-16 14:48:33,906:INFO http-nio-9000-exec-1 (FrameworkServlet.java:547) - Completed initialization in 48 ms
2020-11-16 14:48:34,170:INFO http-nio-9000-exec-1 (EpollProvider.java:68) - Starting without optional epoll library
2020-11-16 14:48:34,171:INFO http-nio-9000-exec-1 (KqueueProvider.java:70) - Starting without optional kqueue library
2020-11-16 14:48:37,390:INFO http-nio-9000-exec-1 (HikariDataSource.java:110) - HikariPool-1 - Starting...
2020-11-16 14:48:38,383:INFO http-nio-9000-exec-1 (PoolBase.java:527) - HikariPool-1 - Driver does not support get/set network timeout for connections. (com.mysql.jdbc.JDBC4Connection.getNetworkTimeout()I)
2020-11-16 14:48:38,427:INFO http-nio-9000-exec-1 (HikariDataSource.java:123) - HikariPool-1 - Start completed.
2020-11-16 14:48:38,434:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:48:38,445:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:48:38,528:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:48:38,551:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:48:38,552:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488207373620436992(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:48:38.551(Timestamp)
2020-11-16 14:48:38,582:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:48:38,595:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 14:53:46,484:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:53:46,486:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:53:46,548:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:53:46,549:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:53:46,551:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 488208665457680384(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:53:46.549(Timestamp)
2020-11-16 14:53:46,581:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:53:46,582:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 14:54:34,932:INFO main (StartupInfoLogger.java:55) - Starting MyBootApplication on DESKTOP-N2UAHBH with PID 18052 (D:\idea-work\MyBoot\target\classes started by xiaoh in D:\idea-work\MyBoot)
2020-11-16 14:54:34,937:INFO main (SpringApplication.java:655) - The following profiles are active: dev
2020-11-16 14:54:35,568:INFO main (RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-16 14:54:35,570:INFO main (RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-16 14:54:35,589:INFO main (RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
2020-11-16 14:54:35,762:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'asyncTaskConfig' of type [com.xhg.threadPool.AsyncTaskConfig$$EnhancerBySpringCGLIB$$d7bad29a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 14:54:35,816:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 14:54:35,945:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 14:54:36,022:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 14:54:36,232:INFO main (TomcatWebServer.java:92) - Tomcat initialized with port(s): 9000 (http)
2020-11-16 14:54:36,238:INFO main (DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-9000"]
2020-11-16 14:54:36,239:INFO main (DirectJDKLog.java:173) - Starting service [Tomcat]
2020-11-16 14:54:36,239:INFO main (DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-11-16 14:54:36,314:INFO main (DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-11-16 14:54:36,314:INFO main (ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1350 ms
2020-11-16 14:54:36,942:INFO main (SentinelWebAutoConfiguration.java:80) - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-11-16 14:54:37,014:INFO main (PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-16 14:54:37,024:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService
2020-11-16 14:54:37,025:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskExecutor'
2020-11-16 14:54:37,303:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskScheduler'
2020-11-16 14:54:37,448:INFO main (DocumentationPluginsBootstrapper.java:160) - Context refreshed
2020-11-16 14:54:37,456:INFO main (DocumentationPluginsBootstrapper.java:163) - Found 1 custom documentation plugin(s)
2020-11-16 14:54:37,473:INFO main (ApiListingReferenceScanner.java:41) - Scanning for api listing references
2020-11-16 14:54:37,614:INFO main (AbstractConnectionFactory.java:524) - Attempting to connect to: [121.43.158.136:5672]
2020-11-16 14:54:37,716:INFO main (AbstractConnectionFactory.java:497) - Created new connection: rabbitConnectionFactory#1a1c21b4:0/SimpleConnection@f1d1463 [delegate=amqp://userMQ@121.43.158.136:5672/hostDemo, localPort= 63047]
2020-11-16 14:54:38,306:INFO main (DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-9000"]
2020-11-16 14:54:38,324:INFO main (TomcatWebServer.java:204) - Tomcat started on port(s): 9000 (http) with context path '/boot'
2020-11-16 14:54:38,408:INFO main (StartupInfoLogger.java:61) - Started MyBootApplication in 3.967 seconds (JVM running for 4.688)
2020-11-16 14:55:38,509:INFO http-nio-9000-exec-1 (DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-16 14:55:38,510:INFO http-nio-9000-exec-1 (FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-11-16 14:55:38,515:INFO http-nio-9000-exec-1 (FrameworkServlet.java:547) - Completed initialization in 5 ms
2020-11-16 14:55:38,565:WARN http-nio-9000-exec-1 (AbstractHandlerExceptionResolver.java:199) - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2020-11-16 14:56:05,525:INFO main (StartupInfoLogger.java:55) - Starting MyBootApplication on DESKTOP-N2UAHBH with PID 10508 (D:\idea-work\MyBoot\target\classes started by xiaoh in D:\idea-work\MyBoot)
2020-11-16 14:56:05,529:INFO main (SpringApplication.java:655) - The following profiles are active: dev
2020-11-16 14:56:06,134:INFO main (RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-16 14:56:06,135:INFO main (RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-16 14:56:06,157:INFO main (RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-11-16 14:56:06,322:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'asyncTaskConfig' of type [com.xhg.threadPool.AsyncTaskConfig$$EnhancerBySpringCGLIB$$9ce3ec12] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 14:56:06,376:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 14:56:06,499:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 14:56:06,571:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 14:56:06,774:INFO main (TomcatWebServer.java:92) - Tomcat initialized with port(s): 9000 (http)
2020-11-16 14:56:06,781:INFO main (DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-9000"]
2020-11-16 14:56:06,782:INFO main (DirectJDKLog.java:173) - Starting service [Tomcat]
2020-11-16 14:56:06,782:INFO main (DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-11-16 14:56:06,853:INFO main (DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-11-16 14:56:06,854:INFO main (ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1297 ms
2020-11-16 14:56:07,469:INFO main (SentinelWebAutoConfiguration.java:80) - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-11-16 14:56:07,542:INFO main (PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-16 14:56:07,551:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService
2020-11-16 14:56:07,552:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskExecutor'
2020-11-16 14:56:07,826:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskScheduler'
2020-11-16 14:56:07,971:INFO main (DocumentationPluginsBootstrapper.java:160) - Context refreshed
2020-11-16 14:56:07,979:INFO main (DocumentationPluginsBootstrapper.java:163) - Found 1 custom documentation plugin(s)
2020-11-16 14:56:07,996:INFO main (ApiListingReferenceScanner.java:41) - Scanning for api listing references
2020-11-16 14:56:08,142:INFO main (AbstractConnectionFactory.java:524) - Attempting to connect to: [121.43.158.136:5672]
2020-11-16 14:56:08,253:INFO main (AbstractConnectionFactory.java:497) - Created new connection: rabbitConnectionFactory#2a8dd942:0/SimpleConnection@29c25bbc [delegate=amqp://userMQ@121.43.158.136:5672/hostDemo, localPort= 63097]
2020-11-16 14:56:08,877:INFO main (DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-9000"]
2020-11-16 14:56:08,894:INFO main (TomcatWebServer.java:204) - Tomcat started on port(s): 9000 (http) with context path '/boot'
2020-11-16 14:56:08,983:INFO main (StartupInfoLogger.java:61) - Started MyBootApplication in 3.899 seconds (JVM running for 4.645)
2020-11-16 14:56:16,454:INFO http-nio-9000-exec-1 (DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-16 14:56:16,454:INFO http-nio-9000-exec-1 (FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-11-16 14:56:16,459:INFO http-nio-9000-exec-1 (FrameworkServlet.java:547) - Completed initialization in 5 ms
2020-11-16 14:56:16,593:INFO http-nio-9000-exec-1 (EpollProvider.java:68) - Starting without optional epoll library
2020-11-16 14:56:16,595:INFO http-nio-9000-exec-1 (KqueueProvider.java:70) - Starting without optional kqueue library
2020-11-16 14:56:17,284:INFO http-nio-9000-exec-1 (HikariDataSource.java:110) - HikariPool-1 - Starting...
2020-11-16 14:56:17,682:INFO http-nio-9000-exec-1 (PoolBase.java:527) - HikariPool-1 - Driver does not support get/set network timeout for connections. (com.mysql.jdbc.JDBC4Connection.getNetworkTimeout()I)
2020-11-16 14:56:17,730:INFO http-nio-9000-exec-1 (HikariDataSource.java:123) - HikariPool-1 - Start completed.
2020-11-16 14:56:17,740:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:17,754:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:17,837:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:17,849:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:17,850:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488209300051681280(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:17.848(Timestamp)
2020-11-16 14:56:17,879:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:17,883:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 14:56:18,538:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:18,539:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:18,600:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:18,601:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:18,602:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 488209303209992192(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:18.601(Timestamp)
2020-11-16 14:56:18,630:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:18,631:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 14:56:18,774:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:18,774:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:18,832:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:18,832:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:18,833:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 488209304178876416(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:18.832(Timestamp)
2020-11-16 14:56:18,863:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:18,863:INFO Derry-Async-3 (AsyncTaskService.java:26) - 线程Derry-Async-3 执行异步任务：8
2020-11-16 14:56:18,948:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 14:56:18,948:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 14:56:18,949:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:19,010:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:19,010:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 14:56:19,116:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:19,117:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:19,174:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:19,175:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:19,175:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 488209305613328384(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:19.174(Timestamp)
2020-11-16 14:56:19,204:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:19,204:INFO Derry-Async-4 (AsyncTaskService.java:26) - 线程Derry-Async-4 执行异步任务：8
2020-11-16 14:56:19,339:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:19,339:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:19,401:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:19,401:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:19,402:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 488209306565435392(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:19.401(Timestamp)
2020-11-16 14:56:19,430:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:19,431:INFO Derry-Async-5 (AsyncTaskService.java:26) - 线程Derry-Async-5 执行异步任务：8
2020-11-16 14:56:19,543:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:19,543:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:19,599:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:19,599:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:19,600:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 488209307395907584(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:19.599(Timestamp)
2020-11-16 14:56:19,630:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:19,632:INFO Derry-Async-6 (AsyncTaskService.java:26) - 线程Derry-Async-6 执行异步任务：8
2020-11-16 14:56:19,658:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 14:56:19,659:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 14:56:19,660:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:19,703:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:19,703:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:19,721:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:19,721:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 14:56:19,761:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:19,762:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:19,763:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 488209308075384832(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:19.761(Timestamp)
2020-11-16 14:56:19,791:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:19,792:INFO Derry-Async-7 (AsyncTaskService.java:26) - 线程Derry-Async-7 执行异步任务：8
2020-11-16 14:56:19,879:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:19,879:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:19,935:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:19,935:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:19,936:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 488209308805193728(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:19.935(Timestamp)
2020-11-16 14:56:19,964:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:19,964:INFO Derry-Async-8 (AsyncTaskService.java:26) - 线程Derry-Async-8 执行异步任务：8
2020-11-16 14:56:20,020:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:20,021:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:20,076:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:20,077:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:20,077:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 488209309396590592(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:20.076(Timestamp)
2020-11-16 14:56:20,106:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:20,107:INFO Derry-Async-9 (AsyncTaskService.java:26) - 线程Derry-Async-9 执行异步任务：8
2020-11-16 14:56:20,129:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 14:56:20,129:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 14:56:20,130:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:20,194:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:20,195:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 14:56:20,289:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:20,290:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:20,350:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:20,351:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:20,351:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488209310545829888(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:20.35(Timestamp)
2020-11-16 14:56:20,381:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:20,382:INFO Derry-Async-10 (AsyncTaskService.java:26) - 线程Derry-Async-10 执行异步任务：8
2020-11-16 14:56:20,442:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:20,443:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:20,501:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:20,502:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:20,502:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 488209311179169792(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:20.501(Timestamp)
2020-11-16 14:56:20,531:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:20,531:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 14:56:20,602:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:20,602:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:20,657:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:20,657:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:20,658:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 488209311833481216(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:20.657(Timestamp)
2020-11-16 14:56:20,686:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:20,687:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 14:56:20,711:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 14:56:20,711:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 14:56:20,712:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:20,775:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:20,775:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 14:56:20,780:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:20,780:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:20,837:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:20,838:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:20,838:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 488209312592650240(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:20.838(Timestamp)
2020-11-16 14:56:20,868:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:20,868:INFO Derry-Async-3 (AsyncTaskService.java:26) - 线程Derry-Async-3 执行异步任务：8
2020-11-16 14:56:20,938:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:20,938:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:20,998:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:20,998:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:20,999:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 488209313263738880(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:20.998(Timestamp)
2020-11-16 14:56:21,026:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:21,027:INFO Derry-Async-4 (AsyncTaskService.java:26) - 线程Derry-Async-4 执行异步任务：8
2020-11-16 14:56:21,135:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:21,136:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:21,193:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:21,195:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:21,196:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 488209314085822464(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:21.194(Timestamp)
2020-11-16 14:56:21,226:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:21,226:INFO Derry-Async-5 (AsyncTaskService.java:26) - 线程Derry-Async-5 执行异步任务：8
2020-11-16 14:56:21,250:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 14:56:21,250:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 14:56:21,250:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:21,309:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:21,309:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:21,310:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:21,310:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 14:56:21,371:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:21,374:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:21,375:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 488209314832408576(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:21.372(Timestamp)
2020-11-16 14:56:21,404:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:21,405:INFO Derry-Async-6 (AsyncTaskService.java:26) - 线程Derry-Async-6 执行异步任务：8
2020-11-16 14:56:21,531:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:21,532:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:21,589:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:21,590:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:21,590:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 488209315742572544(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:21.589(Timestamp)
2020-11-16 14:56:21,619:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:21,620:INFO Derry-Async-7 (AsyncTaskService.java:26) - 线程Derry-Async-7 执行异步任务：8
2020-11-16 14:56:22,062:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:22,064:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:22,125:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:22,126:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:22,126:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 488209317990719488(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:22.125(Timestamp)
2020-11-16 14:56:22,155:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:22,155:INFO Derry-Async-8 (AsyncTaskService.java:26) - 线程Derry-Async-8 执行异步任务：8
2020-11-16 14:56:22,178:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 14:56:22,178:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 14:56:22,178:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:22,240:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:22,240:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 14:56:22,253:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:22,253:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:22,308:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:22,308:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:22,309:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488209318758277120(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:22.308(Timestamp)
2020-11-16 14:56:22,338:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:22,338:INFO Derry-Async-9 (AsyncTaskService.java:26) - 线程Derry-Async-9 执行异步任务：8
2020-11-16 14:56:22,423:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:22,423:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:22,478:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:22,479:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:22,479:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 488209319475503104(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:22.479(Timestamp)
2020-11-16 14:56:22,509:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:22,509:INFO Derry-Async-10 (AsyncTaskService.java:26) - 线程Derry-Async-10 执行异步任务：8
2020-11-16 14:56:22,574:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:22,575:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:22,632:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:22,633:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:22,633:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 488209320117231616(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:22.632(Timestamp)
2020-11-16 14:56:22,662:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:22,662:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 14:56:22,686:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 14:56:22,686:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 14:56:22,686:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:22,749:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:22,749:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 14:56:32,956:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:32,956:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:33,015:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:33,017:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:33,018:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 488209363670884352(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:33.016(Timestamp)
2020-11-16 14:56:33,047:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:33,048:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 14:56:33,919:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:33,920:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:33,975:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:33,975:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:33,975:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 488209367693221888(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:33.975(Timestamp)
2020-11-16 14:56:34,003:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:34,003:INFO Derry-Async-3 (AsyncTaskService.java:26) - 线程Derry-Async-3 执行异步任务：8
2020-11-16 14:56:34,173:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:34,174:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:34,229:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:34,229:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:34,230:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 488209368758575104(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:34.229(Timestamp)
2020-11-16 14:56:34,260:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:34,260:INFO Derry-Async-4 (AsyncTaskService.java:26) - 线程Derry-Async-4 执行异步任务：8
2020-11-16 14:56:34,282:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 14:56:34,283:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 14:56:34,283:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:34,314:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:34,314:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:34,346:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:34,346:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 14:56:34,372:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:34,372:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:34,372:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 488209369358360576(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:34.372(Timestamp)
2020-11-16 14:56:34,400:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:34,400:INFO Derry-Async-5 (AsyncTaskService.java:26) - 线程Derry-Async-5 执行异步任务：8
2020-11-16 14:56:34,469:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:34,470:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:34,528:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:34,528:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:34,528:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 488209370012672000(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:34.528(Timestamp)
2020-11-16 14:56:34,558:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:34,558:INFO Derry-Async-6 (AsyncTaskService.java:26) - 线程Derry-Async-6 执行异步任务：8
2020-11-16 14:56:34,616:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:34,616:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:34,674:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:34,674:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:34,674:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 488209370625040384(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:34.674(Timestamp)
2020-11-16 14:56:34,702:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:34,703:INFO Derry-Async-7 (AsyncTaskService.java:26) - 线程Derry-Async-7 执行异步任务：8
2020-11-16 14:56:34,725:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 14:56:34,725:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 14:56:34,726:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:34,774:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:34,775:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:34,786:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:34,786:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 14:56:34,831:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:34,832:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:34,833:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488209371287740416(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:34.832(Timestamp)
2020-11-16 14:56:34,860:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:34,860:INFO Derry-Async-8 (AsyncTaskService.java:26) - 线程Derry-Async-8 执行异步任务：8
2020-11-16 14:56:34,904:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:34,904:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:34,964:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:34,965:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:34,967:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 488209371841388544(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:34.964(Timestamp)
2020-11-16 14:56:34,996:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:34,996:INFO Derry-Async-9 (AsyncTaskService.java:26) - 线程Derry-Async-9 执行异步任务：8
2020-11-16 14:56:35,071:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:35,071:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:35,128:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:35,128:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:35,129:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 488209372529254400(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:35.128(Timestamp)
2020-11-16 14:56:35,158:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:35,158:INFO Derry-Async-10 (AsyncTaskService.java:26) - 线程Derry-Async-10 执行异步任务：8
2020-11-16 14:56:35,181:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 14:56:35,182:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 14:56:35,182:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:35,219:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:35,219:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:35,241:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:35,241:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 14:56:35,272:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:35,273:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:35,273:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 488209373133234176(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:35.272(Timestamp)
2020-11-16 14:56:35,304:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:35,304:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 14:56:35,389:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:35,389:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:35,444:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:35,445:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:35,445:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 488209373854654464(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:35.444(Timestamp)
2020-11-16 14:56:35,472:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:35,472:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 14:56:35,564:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:35,565:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:35,626:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:35,627:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:35,629:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 488209374622212096(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:35.627(Timestamp)
2020-11-16 14:56:35,656:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:35,657:INFO Derry-Async-3 (AsyncTaskService.java:26) - 线程Derry-Async-3 执行异步任务：8
2020-11-16 14:56:35,681:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 14:56:35,682:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 14:56:35,682:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:35,743:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:35,743:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 14:56:36,090:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:36,091:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:36,147:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:36,147:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:36,148:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 488209376803250176(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:36.147(Timestamp)
2020-11-16 14:56:36,176:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:36,176:INFO Derry-Async-4 (AsyncTaskService.java:26) - 线程Derry-Async-4 执行异步任务：8
2020-11-16 14:56:36,276:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:36,277:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:36,332:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:36,333:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:36,334:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 488209377579196416(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:36.332(Timestamp)
2020-11-16 14:56:36,363:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:36,363:INFO Derry-Async-5 (AsyncTaskService.java:26) - 线程Derry-Async-5 执行异步任务：8
2020-11-16 14:56:36,430:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:36,430:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:36,492:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:36,492:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:36,493:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 488209378250285056(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:36.492(Timestamp)
2020-11-16 14:56:36,522:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:36,522:INFO Derry-Async-6 (AsyncTaskService.java:26) - 线程Derry-Async-6 执行异步任务：8
2020-11-16 14:56:36,544:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 14:56:36,544:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 14:56:36,545:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:36,607:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:36,607:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 14:56:36,612:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:36,613:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:36,674:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:36,675:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:36,675:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488209379013648384(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:36.674(Timestamp)
2020-11-16 14:56:36,704:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:36,704:INFO Derry-Async-7 (AsyncTaskService.java:26) - 线程Derry-Async-7 执行异步任务：8
2020-11-16 14:56:36,772:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:36,773:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:36,829:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:36,829:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:36,830:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 488209379663765504(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:36.829(Timestamp)
2020-11-16 14:56:36,858:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:36,859:INFO Derry-Async-8 (AsyncTaskService.java:26) - 线程Derry-Async-8 执行异步任务：8
2020-11-16 14:56:36,949:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:36,950:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:37,006:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:37,007:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:37,009:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 488209380410351616(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:37.007(Timestamp)
2020-11-16 14:56:37,037:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:37,037:INFO Derry-Async-9 (AsyncTaskService.java:26) - 线程Derry-Async-9 执行异步任务：8
2020-11-16 14:56:37,061:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 14:56:37,061:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 14:56:37,061:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:37,120:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:37,120:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 14:56:37,132:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:37,133:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:37,188:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:37,188:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:37,189:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 488209381169520640(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:37.188(Timestamp)
2020-11-16 14:56:37,219:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:37,220:INFO Derry-Async-10 (AsyncTaskService.java:26) - 线程Derry-Async-10 执行异步任务：8
2020-11-16 14:56:37,803:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:37,804:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:37,865:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:37,866:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:37,866:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 488209384013258752(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:37.866(Timestamp)
2020-11-16 14:56:37,895:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:37,895:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 14:56:38,027:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:38,027:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:38,082:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:38,082:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:38,083:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 488209384919228416(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:38.082(Timestamp)
2020-11-16 14:56:38,110:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:38,110:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 14:56:38,133:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 14:56:38,133:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 14:56:38,134:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:38,192:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:38,192:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 14:56:38,264:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:38,264:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:38,320:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:38,321:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:38,323:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 488209385921667072(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:38.321(Timestamp)
2020-11-16 14:56:38,351:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:38,352:INFO Derry-Async-3 (AsyncTaskService.java:26) - 线程Derry-Async-3 执行异步任务：8
2020-11-16 14:56:38,411:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:38,412:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:38,470:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:38,470:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:38,471:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 488209386546618368(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:38.47(Timestamp)
2020-11-16 14:56:38,499:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:38,499:INFO Derry-Async-4 (AsyncTaskService.java:26) - 线程Derry-Async-4 执行异步任务：8
2020-11-16 14:56:38,580:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:38,581:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:38,642:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:38,643:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:38,644:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 488209387268038656(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:38.642(Timestamp)
2020-11-16 14:56:38,673:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:38,673:INFO Derry-Async-5 (AsyncTaskService.java:26) - 线程Derry-Async-5 执行异步任务：8
2020-11-16 14:56:38,697:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 14:56:38,698:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 14:56:38,699:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:38,761:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:38,761:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 14:56:38,776:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:38,777:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:38,833:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:38,834:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:38,835:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488209388069150720(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:38.833(Timestamp)
2020-11-16 14:56:38,863:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:38,863:INFO Derry-Async-6 (AsyncTaskService.java:26) - 线程Derry-Async-6 执行异步任务：8
2020-11-16 14:56:38,941:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:38,942:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:38,998:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:39,000:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:39,001:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 488209388765405184(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:38.999(Timestamp)
2020-11-16 14:56:39,031:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:39,031:INFO Derry-Async-7 (AsyncTaskService.java:26) - 线程Derry-Async-7 执行异步任务：8
2020-11-16 14:56:39,107:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:39,107:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:39,165:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:39,165:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:39,165:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 488209389461659648(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:39.165(Timestamp)
2020-11-16 14:56:39,194:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:39,194:INFO Derry-Async-8 (AsyncTaskService.java:26) - 线程Derry-Async-8 执行异步任务：8
2020-11-16 14:56:39,217:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 14:56:39,218:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 14:56:39,218:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:39,269:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:39,269:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:39,280:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:39,280:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 14:56:39,329:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:39,330:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:39,330:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 488209390149525504(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:39.329(Timestamp)
2020-11-16 14:56:39,360:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:39,360:INFO Derry-Async-9 (AsyncTaskService.java:26) - 线程Derry-Async-9 执行异步任务：8
2020-11-16 14:56:39,441:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:39,441:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:39,498:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:39,499:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:39,501:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 488209390858362880(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:39.498(Timestamp)
2020-11-16 14:56:39,531:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:39,532:INFO Derry-Async-10 (AsyncTaskService.java:26) - 线程Derry-Async-10 执行异步任务：8
2020-11-16 14:56:39,604:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:39,605:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:39,660:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:39,660:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:39,660:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 488209391537840128(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:39.66(Timestamp)
2020-11-16 14:56:39,690:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:39,691:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 14:56:39,712:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 14:56:39,713:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 14:56:39,713:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:39,771:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:39,771:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 14:56:39,782:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 14:56:39,782:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 14:56:39,839:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 14:56:39,839:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 14:56:39,839:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 488209392288620544(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 14:56:39.839(Timestamp)
2020-11-16 14:56:39,868:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 14:56:39,868:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 15:05:49,500:INFO main (StartupInfoLogger.java:55) - Starting MyBootApplication on DESKTOP-N2UAHBH with PID 14168 (D:\idea-work\MyBoot\target\classes started by xiaoh in D:\idea-work\MyBoot)
2020-11-16 15:05:49,504:INFO main (SpringApplication.java:655) - The following profiles are active: dev
2020-11-16 15:05:50,104:INFO main (RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-16 15:05:50,105:INFO main (RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-16 15:05:50,124:INFO main (RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-11-16 15:05:50,288:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'asyncTaskConfig' of type [com.xhg.threadPool.AsyncTaskConfig$$EnhancerBySpringCGLIB$$b90412c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 15:05:50,343:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 15:05:50,467:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 15:05:50,544:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 15:05:50,741:INFO main (TomcatWebServer.java:92) - Tomcat initialized with port(s): 9000 (http)
2020-11-16 15:05:50,747:INFO main (DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-9000"]
2020-11-16 15:05:50,747:INFO main (DirectJDKLog.java:173) - Starting service [Tomcat]
2020-11-16 15:05:50,748:INFO main (DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-11-16 15:05:50,847:INFO main (DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-11-16 15:05:50,847:INFO main (ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1317 ms
2020-11-16 15:05:51,459:INFO main (SentinelWebAutoConfiguration.java:80) - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-11-16 15:05:51,548:INFO main (PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-16 15:05:51,559:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService
2020-11-16 15:05:51,560:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskExecutor'
2020-11-16 15:05:51,826:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskScheduler'
2020-11-16 15:05:51,967:INFO main (DocumentationPluginsBootstrapper.java:160) - Context refreshed
2020-11-16 15:05:51,975:INFO main (DocumentationPluginsBootstrapper.java:163) - Found 1 custom documentation plugin(s)
2020-11-16 15:05:51,992:INFO main (ApiListingReferenceScanner.java:41) - Scanning for api listing references
2020-11-16 15:05:52,137:INFO main (AbstractConnectionFactory.java:524) - Attempting to connect to: [121.43.158.136:5672]
2020-11-16 15:05:52,250:INFO main (AbstractConnectionFactory.java:497) - Created new connection: rabbitConnectionFactory#2db86a7c:0/SimpleConnection@3a54638b [delegate=amqp://userMQ@121.43.158.136:5672/hostDemo, localPort= 63428]
2020-11-16 15:05:52,854:INFO main (DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-9000"]
2020-11-16 15:05:52,868:INFO main (TomcatWebServer.java:204) - Tomcat started on port(s): 9000 (http) with context path '/boot'
2020-11-16 15:05:52,957:INFO main (StartupInfoLogger.java:61) - Started MyBootApplication in 3.929 seconds (JVM running for 4.666)
2020-11-16 15:08:06,497:INFO http-nio-9000-exec-1 (DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-16 15:08:06,497:INFO http-nio-9000-exec-1 (FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-11-16 15:08:06,503:INFO http-nio-9000-exec-1 (FrameworkServlet.java:547) - Completed initialization in 6 ms
2020-11-16 15:08:06,722:INFO http-nio-9000-exec-1 (EpollProvider.java:68) - Starting without optional epoll library
2020-11-16 15:08:06,723:INFO http-nio-9000-exec-1 (KqueueProvider.java:70) - Starting without optional kqueue library
2020-11-16 15:08:07,316:INFO http-nio-9000-exec-1 (HikariDataSource.java:110) - HikariPool-1 - Starting...
2020-11-16 15:08:07,800:INFO http-nio-9000-exec-1 (PoolBase.java:527) - HikariPool-1 - Driver does not support get/set network timeout for connections. (com.mysql.jdbc.JDBC4Connection.getNetworkTimeout()I)
2020-11-16 15:08:07,859:INFO http-nio-9000-exec-1 (HikariDataSource.java:123) - HikariPool-1 - Start completed.
2020-11-16 15:08:07,864:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:08:07,874:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:08:07,952:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:08:07,955:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:08:07,956:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:08:08,023:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:08:08,024:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:08:08,024:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:08:08,083:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:08:08,085:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488212278481477632(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:08:07.961(Timestamp)
2020-11-16 15:08:08,089:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:08:08,089:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:08:08,090:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 488212278745718784(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:08:08.024(Timestamp)
2020-11-16 15:08:08,119:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:08:08,119:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:08:08,120:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:08:08,123:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 15:08:08,127:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:08:08,127:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:08:08,127:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 15:08:08,128:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 488212279018348544(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:08:08.089(Timestamp)
2020-11-16 15:08:08,164:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:08:08,164:INFO Derry-Async-3 (AsyncTaskService.java:26) - 线程Derry-Async-3 执行异步任务：8
2020-11-16 15:08:08,180:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:08:08,180:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:08:08,181:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 488212279400030208(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:08:08.18(Timestamp)
2020-11-16 15:08:08,215:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:08:08,217:INFO Derry-Async-4 (AsyncTaskService.java:26) - 线程Derry-Async-4 执行异步任务：8
2020-11-16 15:08:08,251:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 15:08:08,252:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 15:08:08,253:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:08:08,325:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:08:08,325:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 15:08:08,682:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:08:08,683:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:08:08,749:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:08:08,750:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:08:08,751:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 488212281790783488(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:08:08.75(Timestamp)
2020-11-16 15:08:08,788:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:08:08,788:INFO Derry-Async-5 (AsyncTaskService.java:26) - 线程Derry-Async-5 执行异步任务：8
2020-11-16 15:08:08,834:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:08:08,835:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:08:08,900:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:08:08,904:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:08:08,904:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 488212282424123392(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:08:08.901(Timestamp)
2020-11-16 15:08:08,942:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:08:08,943:INFO Derry-Async-6 (AsyncTaskService.java:26) - 线程Derry-Async-6 执行异步任务：8
2020-11-16 15:08:08,970:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 15:08:08,970:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 15:08:08,971:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:08:09,038:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:08:09,038:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 15:08:09,109:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:08:09,110:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:08:09,175:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:08:09,176:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:08:09,177:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 488212283573362688(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:08:09.175(Timestamp)
2020-11-16 15:08:09,213:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:08:09,214:INFO Derry-Async-7 (AsyncTaskService.java:26) - 线程Derry-Async-7 执行异步任务：8
2020-11-16 15:08:09,650:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:08:09,650:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:08:09,713:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:08:09,713:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:08:09,714:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 488212285829898240(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:08:09.713(Timestamp)
2020-11-16 15:08:09,749:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:08:09,750:INFO Derry-Async-8 (AsyncTaskService.java:26) - 线程Derry-Async-8 执行异步任务：8
2020-11-16 15:08:09,906:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:08:09,907:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:08:09,970:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:08:09,971:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:08:09,971:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 488212286907834368(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:08:09.97(Timestamp)
2020-11-16 15:08:10,007:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:08:10,008:INFO Derry-Async-9 (AsyncTaskService.java:26) - 线程Derry-Async-9 执行异步任务：8
2020-11-16 15:08:10,034:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 15:08:10,035:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 15:08:10,035:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:08:10,103:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:08:10,103:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 15:08:10,774:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:08:10,774:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:08:10,838:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:08:10,838:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:08:10,839:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 488212290548490240(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:08:10.838(Timestamp)
2020-11-16 15:08:10,880:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:08:10,881:INFO Derry-Async-10 (AsyncTaskService.java:26) - 线程Derry-Async-10 执行异步任务：8
2020-11-16 15:09:47,960:INFO main (StartupInfoLogger.java:55) - Starting MyBootApplication on DESKTOP-N2UAHBH with PID 18424 (D:\idea-work\MyBoot\target\classes started by xiaoh in D:\idea-work\MyBoot)
2020-11-16 15:09:47,965:INFO main (SpringApplication.java:655) - The following profiles are active: dev
2020-11-16 15:09:48,593:INFO main (RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-16 15:09:48,595:INFO main (RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-16 15:09:48,614:INFO main (RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-11-16 15:09:48,797:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'asyncTaskConfig' of type [com.xhg.threadPool.AsyncTaskConfig$$EnhancerBySpringCGLIB$$a38273b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 15:09:48,853:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 15:09:48,985:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 15:09:49,064:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 15:09:49,268:INFO main (TomcatWebServer.java:92) - Tomcat initialized with port(s): 9000 (http)
2020-11-16 15:09:49,274:INFO main (DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-9000"]
2020-11-16 15:09:49,275:INFO main (DirectJDKLog.java:173) - Starting service [Tomcat]
2020-11-16 15:09:49,275:INFO main (DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-11-16 15:09:49,362:INFO main (DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-11-16 15:09:49,363:INFO main (ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1370 ms
2020-11-16 15:09:50,019:INFO main (SentinelWebAutoConfiguration.java:80) - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-11-16 15:09:50,094:INFO main (PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-16 15:09:50,105:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService
2020-11-16 15:09:50,105:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskExecutor'
2020-11-16 15:09:50,387:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskScheduler'
2020-11-16 15:09:50,547:INFO main (DocumentationPluginsBootstrapper.java:160) - Context refreshed
2020-11-16 15:09:50,556:INFO main (DocumentationPluginsBootstrapper.java:163) - Found 1 custom documentation plugin(s)
2020-11-16 15:09:50,576:INFO main (ApiListingReferenceScanner.java:41) - Scanning for api listing references
2020-11-16 15:09:50,732:INFO main (AbstractConnectionFactory.java:524) - Attempting to connect to: [121.43.158.136:5672]
2020-11-16 15:09:50,885:INFO main (AbstractConnectionFactory.java:497) - Created new connection: rabbitConnectionFactory#1b560eb0:0/SimpleConnection@6cee903a [delegate=amqp://userMQ@121.43.158.136:5672/hostDemo, localPort= 63612]
2020-11-16 15:09:51,662:INFO main (DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-9000"]
2020-11-16 15:09:51,677:INFO main (TomcatWebServer.java:204) - Tomcat started on port(s): 9000 (http) with context path '/boot'
2020-11-16 15:09:51,764:INFO main (StartupInfoLogger.java:61) - Started MyBootApplication in 4.269 seconds (JVM running for 5.026)
2020-11-16 15:10:07,815:INFO http-nio-9000-exec-3 (DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-16 15:10:07,815:INFO http-nio-9000-exec-3 (FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-11-16 15:10:07,820:INFO http-nio-9000-exec-3 (FrameworkServlet.java:547) - Completed initialization in 5 ms
2020-11-16 15:10:07,938:INFO http-nio-9000-exec-3 (EpollProvider.java:68) - Starting without optional epoll library
2020-11-16 15:10:07,939:INFO http-nio-9000-exec-3 (KqueueProvider.java:70) - Starting without optional kqueue library
2020-11-16 15:10:08,659:INFO http-nio-9000-exec-2 (HikariDataSource.java:110) - HikariPool-1 - Starting...
2020-11-16 15:10:09,355:INFO http-nio-9000-exec-2 (PoolBase.java:527) - HikariPool-1 - Driver does not support get/set network timeout for connections. (com.mysql.jdbc.JDBC4Connection.getNetworkTimeout()I)
2020-11-16 15:10:09,412:INFO http-nio-9000-exec-2 (HikariDataSource.java:123) - HikariPool-1 - Start completed.
2020-11-16 15:10:09,418:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:10:09,428:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:10:09,521:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:10:09,525:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:10:09,526:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:10:09,594:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:10:09,597:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:10:09,598:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:10:09,663:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:10:09,663:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:10:09,664:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:10:09,725:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:10:09,726:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:10:09,726:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:10:09,750:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:10:09,751:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 488212788387209216(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:10:09.532(Timestamp)
2020-11-16 15:10:09,786:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:10:09,787:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:10:09,788:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 488212788655644672(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:10:09.596(Timestamp)
2020-11-16 15:10:09,789:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 15:10:09,791:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:10:09,792:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:10:09,793:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 488212788936663040(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:10:09.663(Timestamp)
2020-11-16 15:10:09,822:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:10:09,823:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:10:09,823:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 15:10:09,824:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 488212789200904192(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:10:09.726(Timestamp)
2020-11-16 15:10:09,828:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:10:09,829:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:10:09,829:INFO Derry-Async-3 (AsyncTaskService.java:26) - 线程Derry-Async-3 执行异步任务：8
2020-11-16 15:10:09,830:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 488212789477728256(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:10:09.792(Timestamp)
2020-11-16 15:10:09,857:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:10:09,858:INFO Derry-Async-4 (AsyncTaskService.java:26) - 线程Derry-Async-4 执行异步任务：8
2020-11-16 15:10:09,864:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:10:09,865:INFO Derry-Async-5 (AsyncTaskService.java:26) - 线程Derry-Async-5 执行异步任务：8
2020-11-16 15:10:09,920:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 15:10:09,920:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 15:10:09,921:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:10:09,995:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:10:09,996:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 15:10:10,019:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:10:10,022:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:10:10,085:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:10:10,085:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:10:10,086:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488212790706659328(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:10:10.085(Timestamp)
2020-11-16 15:10:10,122:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:10:10,123:INFO Derry-Async-6 (AsyncTaskService.java:26) - 线程Derry-Async-6 执行异步任务：8
2020-11-16 15:10:10,152:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 15:10:10,152:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 15:10:10,152:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:10:10,164:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:10:10,165:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:10:10,223:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:10:10,223:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 15:10:10,231:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:10:10,232:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:10:10,233:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 488212791323222016(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:10:10.232(Timestamp)
2020-11-16 15:10:10,266:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:10:10,267:INFO Derry-Async-7 (AsyncTaskService.java:26) - 线程Derry-Async-7 执行异步任务：8
2020-11-16 15:10:10,406:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:10:10,408:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:10:10,473:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:10:10,474:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:10:10,474:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 488212792334049280(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:10:10.473(Timestamp)
2020-11-16 15:10:10,511:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:10:10,512:INFO Derry-Async-8 (AsyncTaskService.java:26) - 线程Derry-Async-8 执行异步任务：8
2020-11-16 15:10:10,536:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:10:10,536:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:10:10,597:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:10:10,598:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:10:10,598:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 488212792854142976(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:10:10.597(Timestamp)
2020-11-16 15:10:10,635:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:10:10,637:INFO Derry-Async-9 (AsyncTaskService.java:26) - 线程Derry-Async-9 执行异步任务：8
2020-11-16 15:10:10,668:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 15:10:10,668:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 15:10:10,669:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:10:10,737:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:10:10,738:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 15:10:10,794:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:10:10,795:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:10:10,857:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:10:10,858:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:10:10,859:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 488212793948856320(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:10:10.858(Timestamp)
2020-11-16 15:10:10,893:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:10:10,894:INFO Derry-Async-10 (AsyncTaskService.java:26) - 线程Derry-Async-10 执行异步任务：8
2020-11-16 15:16:44,660:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:16:44,660:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:16:44,722:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:16:44,723:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:16:44,723:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 488214445938401280(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:16:44.723(Timestamp)
2020-11-16 15:16:44,757:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:16:44,758:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 15:16:44,800:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:16:44,800:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:16:44,863:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:16:44,863:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:16:44,864:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488214446525603840(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:16:44.863(Timestamp)
2020-11-16 15:16:44,900:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:16:44,901:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 15:16:44,931:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 15:16:44,932:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 15:16:44,932:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:16:45,001:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:16:45,001:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 15:16:45,675:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:16:45,675:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:16:45,740:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:16:45,744:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:16:45,746:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 488214450204008448(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:16:45.74(Timestamp)
2020-11-16 15:16:45,778:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:16:45,778:INFO Derry-Async-3 (AsyncTaskService.java:26) - 线程Derry-Async-3 执行异步任务：8
2020-11-16 15:16:45,796:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:16:45,797:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:16:45,858:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:16:45,858:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:16:45,858:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 488214450698936320(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:16:45.858(Timestamp)
2020-11-16 15:16:45,894:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:16:45,894:INFO Derry-Async-4 (AsyncTaskService.java:26) - 线程Derry-Async-4 执行异步任务：8
2020-11-16 15:16:46,709:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:16:46,710:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:16:46,774:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:16:46,776:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:16:46,778:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 488214454545113088(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:16:46.775(Timestamp)
2020-11-16 15:16:46,814:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:16:46,814:INFO Derry-Async-5 (AsyncTaskService.java:26) - 线程Derry-Async-5 执行异步任务：8
2020-11-16 15:16:46,846:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 15:16:46,847:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 15:16:46,848:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:16:46,850:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:16:46,851:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:16:46,913:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:16:46,914:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:16:46,915:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 488214455128121344(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:16:46.914(Timestamp)
2020-11-16 15:16:46,916:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:16:46,916:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 15:16:46,950:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:16:46,950:INFO Derry-Async-6 (AsyncTaskService.java:26) - 线程Derry-Async-6 执行异步任务：8
2020-11-16 15:17:56,010:INFO main (StartupInfoLogger.java:55) - Starting MyBootApplication on DESKTOP-N2UAHBH with PID 12756 (D:\idea-work\MyBoot\target\classes started by xiaoh in D:\idea-work\MyBoot)
2020-11-16 15:17:56,015:INFO main (SpringApplication.java:655) - The following profiles are active: dev
2020-11-16 15:17:56,609:INFO main (RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-16 15:17:56,610:INFO main (RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-16 15:17:56,629:INFO main (RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-11-16 15:17:56,804:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'asyncTaskConfig' of type [com.xhg.threadPool.AsyncTaskConfig$$EnhancerBySpringCGLIB$$3c751265] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 15:17:56,861:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 15:17:56,988:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 15:17:57,111:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 15:17:57,270:INFO main (TomcatWebServer.java:92) - Tomcat initialized with port(s): 9000 (http)
2020-11-16 15:17:57,276:INFO main (DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-9000"]
2020-11-16 15:17:57,277:INFO main (DirectJDKLog.java:173) - Starting service [Tomcat]
2020-11-16 15:17:57,277:INFO main (DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-11-16 15:17:57,367:INFO main (DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-11-16 15:17:57,367:INFO main (ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1326 ms
2020-11-16 15:17:58,099:INFO main (SentinelWebAutoConfiguration.java:80) - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-11-16 15:17:58,175:INFO main (PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-16 15:17:58,186:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService
2020-11-16 15:17:58,187:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskExecutor'
2020-11-16 15:17:58,488:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskScheduler'
2020-11-16 15:17:58,634:INFO main (DocumentationPluginsBootstrapper.java:160) - Context refreshed
2020-11-16 15:17:58,642:INFO main (DocumentationPluginsBootstrapper.java:163) - Found 1 custom documentation plugin(s)
2020-11-16 15:17:58,659:INFO main (ApiListingReferenceScanner.java:41) - Scanning for api listing references
2020-11-16 15:17:58,804:INFO main (AbstractConnectionFactory.java:524) - Attempting to connect to: [121.43.158.136:5672]
2020-11-16 15:17:58,933:INFO main (AbstractConnectionFactory.java:497) - Created new connection: rabbitConnectionFactory#752b69e3:0/SimpleConnection@5d3b6585 [delegate=amqp://userMQ@121.43.158.136:5672/hostDemo, localPort= 63890]
2020-11-16 15:17:59,701:INFO main (DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-9000"]
2020-11-16 15:17:59,715:INFO main (TomcatWebServer.java:204) - Tomcat started on port(s): 9000 (http) with context path '/boot'
2020-11-16 15:17:59,800:INFO main (StartupInfoLogger.java:61) - Started MyBootApplication in 4.266 seconds (JVM running for 5.001)
2020-11-16 15:18:27,130:INFO http-nio-9000-exec-1 (DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-16 15:18:27,130:INFO http-nio-9000-exec-1 (FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-11-16 15:18:27,136:INFO http-nio-9000-exec-1 (FrameworkServlet.java:547) - Completed initialization in 5 ms
2020-11-16 15:18:27,249:INFO http-nio-9000-exec-1 (EpollProvider.java:68) - Starting without optional epoll library
2020-11-16 15:18:27,250:INFO http-nio-9000-exec-1 (KqueueProvider.java:70) - Starting without optional kqueue library
2020-11-16 15:18:27,960:INFO http-nio-9000-exec-3 (HikariDataSource.java:110) - HikariPool-1 - Starting...
2020-11-16 15:18:28,274:INFO http-nio-9000-exec-3 (PoolBase.java:527) - HikariPool-1 - Driver does not support get/set network timeout for connections. (com.mysql.jdbc.JDBC4Connection.getNetworkTimeout()I)
2020-11-16 15:18:28,328:INFO http-nio-9000-exec-3 (HikariDataSource.java:123) - HikariPool-1 - Start completed.
2020-11-16 15:18:28,334:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:18:28,343:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:18:28,419:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:18:28,422:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:18:28,423:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:18:28,483:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:18:28,484:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:18:28,485:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:18:28,544:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:18:28,544:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:18:28,544:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:18:28,601:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:18:28,603:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 488214880904503296(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:18:28.427(Timestamp)
2020-11-16 15:18:28,607:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:18:28,607:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:18:28,608:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 488214881143578624(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:18:28.484(Timestamp)
2020-11-16 15:18:28,637:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:18:28,637:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:18:28,639:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 488214881395236864(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:18:28.544(Timestamp)
2020-11-16 15:18:28,641:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 15:18:28,642:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:18:28,643:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:18:28,643:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 15:18:28,644:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 488214881659478016(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:18:28.607(Timestamp)
2020-11-16 15:18:28,671:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:18:28,672:INFO Derry-Async-3 (AsyncTaskService.java:26) - 线程Derry-Async-3 执行异步任务：8
2020-11-16 15:18:28,675:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:18:28,676:INFO Derry-Async-4 (AsyncTaskService.java:26) - 线程Derry-Async-4 执行异步任务：8
2020-11-16 15:18:28,760:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 15:18:28,760:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 15:18:28,762:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:18:28,828:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:18:28,828:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 15:22:11,855:INFO main (StartupInfoLogger.java:55) - Starting MyBootApplication on DESKTOP-N2UAHBH with PID 18936 (D:\idea-work\MyBoot\target\classes started by xiaoh in D:\idea-work\MyBoot)
2020-11-16 15:22:11,861:INFO main (SpringApplication.java:655) - The following profiles are active: dev
2020-11-16 15:22:12,532:INFO main (RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-16 15:22:12,534:INFO main (RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-16 15:22:12,555:INFO main (RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
2020-11-16 15:22:12,736:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'asyncTaskConfig' of type [com.xhg.threadPool.AsyncTaskConfig$$EnhancerBySpringCGLIB$$2adfd326] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 15:22:12,792:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 15:22:12,929:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 15:22:13,017:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 15:22:13,235:INFO main (TomcatWebServer.java:92) - Tomcat initialized with port(s): 9000 (http)
2020-11-16 15:22:13,240:INFO main (DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-9000"]
2020-11-16 15:22:13,241:INFO main (DirectJDKLog.java:173) - Starting service [Tomcat]
2020-11-16 15:22:13,241:INFO main (DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-11-16 15:22:13,320:INFO main (DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-11-16 15:22:13,320:INFO main (ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1433 ms
2020-11-16 15:22:14,065:INFO main (SentinelWebAutoConfiguration.java:80) - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-11-16 15:22:14,166:INFO main (PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-16 15:22:14,177:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService
2020-11-16 15:22:14,178:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskExecutor'
2020-11-16 15:22:14,456:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskScheduler'
2020-11-16 15:22:14,599:INFO main (DocumentationPluginsBootstrapper.java:160) - Context refreshed
2020-11-16 15:22:14,607:INFO main (DocumentationPluginsBootstrapper.java:163) - Found 1 custom documentation plugin(s)
2020-11-16 15:22:14,625:INFO main (ApiListingReferenceScanner.java:41) - Scanning for api listing references
2020-11-16 15:22:14,769:INFO main (AbstractConnectionFactory.java:524) - Attempting to connect to: [121.43.158.136:5672]
2020-11-16 15:22:14,907:INFO main (AbstractConnectionFactory.java:497) - Created new connection: rabbitConnectionFactory#3313d477:0/SimpleConnection@22cd8ec2 [delegate=amqp://userMQ@121.43.158.136:5672/hostDemo, localPort= 64016]
2020-11-16 15:22:15,756:INFO main (DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-9000"]
2020-11-16 15:22:15,770:INFO main (TomcatWebServer.java:204) - Tomcat started on port(s): 9000 (http) with context path '/boot'
2020-11-16 15:22:15,860:INFO main (StartupInfoLogger.java:61) - Started MyBootApplication in 4.497 seconds (JVM running for 5.315)
2020-11-16 15:22:26,769:INFO http-nio-9000-exec-1 (DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-16 15:22:26,769:INFO http-nio-9000-exec-1 (FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-11-16 15:22:26,774:INFO http-nio-9000-exec-1 (FrameworkServlet.java:547) - Completed initialization in 5 ms
2020-11-16 15:22:26,984:INFO http-nio-9000-exec-1 (EpollProvider.java:68) - Starting without optional epoll library
2020-11-16 15:22:26,987:INFO http-nio-9000-exec-1 (KqueueProvider.java:70) - Starting without optional kqueue library
2020-11-16 15:24:04,991:INFO http-nio-9000-exec-5 (HikariDataSource.java:110) - HikariPool-1 - Starting...
2020-11-16 15:24:05,431:INFO http-nio-9000-exec-5 (PoolBase.java:527) - HikariPool-1 - Driver does not support get/set network timeout for connections. (com.mysql.jdbc.JDBC4Connection.getNetworkTimeout()I)
2020-11-16 15:24:05,496:INFO http-nio-9000-exec-5 (HikariDataSource.java:123) - HikariPool-1 - Start completed.
2020-11-16 15:24:05,503:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:24:05,515:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:24:05,580:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:24:05,589:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:24:05,590:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 488216295064428544(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:24:05.589(Timestamp)
2020-11-16 15:24:05,623:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:24:05,626:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 15:24:07,469:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:24:07,470:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:24:07,530:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:24:07,530:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:24:07,531:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 488216303205572608(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:24:07.53(Timestamp)
2020-11-16 15:24:07,569:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:24:07,570:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 15:24:09,262:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:24:09,262:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:24:09,327:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:24:09,327:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:24:09,328:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 488216310742736896(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:24:09.327(Timestamp)
2020-11-16 15:24:09,365:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:24:09,366:INFO Derry-Async-3 (AsyncTaskService.java:26) - 线程Derry-Async-3 执行异步任务：8
2020-11-16 15:24:09,399:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 15:24:09,400:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 15:24:09,400:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:24:09,466:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:24:09,466:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 15:24:12,030:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:24:12,030:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:24:12,089:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:24:12,090:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:24:12,090:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 488216322327404544(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:24:12.089(Timestamp)
2020-11-16 15:24:12,123:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:24:12,124:INFO Derry-Async-4 (AsyncTaskService.java:26) - 线程Derry-Async-4 执行异步任务：8
2020-11-16 15:24:12,539:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:24:12,540:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:24:12,601:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:24:12,603:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:24:12,606:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 488216324474888192(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:24:12.601(Timestamp)
2020-11-16 15:24:12,640:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:24:12,642:INFO Derry-Async-5 (AsyncTaskService.java:26) - 线程Derry-Async-5 执行异步任务：8
2020-11-16 15:24:12,719:DEBUG http-nio-9000-exec-10 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 15:24:12,719:DEBUG http-nio-9000-exec-10 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:24:12,781:DEBUG http-nio-9000-exec-10 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 15:24:12,783:DEBUG http-nio-9000-exec-10 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 15:24:12,784:DEBUG http-nio-9000-exec-10 (BaseJdbcLogger.java:159) - ==> Parameters: 488216325234057216(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 15:24:12.782(Timestamp)
2020-11-16 15:24:12,818:DEBUG http-nio-9000-exec-10 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:24:12,818:INFO Derry-Async-6 (AsyncTaskService.java:26) - 线程Derry-Async-6 执行异步任务：8
2020-11-16 15:24:12,844:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 15:24:12,844:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 15:24:12,845:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 15:24:12,913:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 15:24:12,914:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 16:05:36,665:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:05:36,668:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:05:36,736:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:05:36,737:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:05:36,739:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 488226743692255232(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:05:36.736(Timestamp)
2020-11-16 16:05:36,772:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:05:36,774:INFO Derry-Async-7 (AsyncTaskService.java:26) - 线程Derry-Async-7 执行异步任务：8
2020-11-16 16:05:43,321:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:05:43,322:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:05:43,395:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:05:43,398:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:05:43,400:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 488226771626319872(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:05:43.396(Timestamp)
2020-11-16 16:05:43,433:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:05:43,433:INFO Derry-Async-8 (AsyncTaskService.java:26) - 线程Derry-Async-8 执行异步任务：8
2020-11-16 16:05:43,883:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:05:43,884:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:05:43,946:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:05:43,947:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:05:43,947:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 488226773937381376(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:05:43.947(Timestamp)
2020-11-16 16:05:43,987:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:05:43,987:INFO Derry-Async-9 (AsyncTaskService.java:26) - 线程Derry-Async-9 执行异步任务：8
2020-11-16 16:05:44,016:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 16:05:44,017:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 16:05:44,017:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:05:44,086:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:05:44,088:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 16:05:49,684:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:05:49,684:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:05:49,745:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:05:49,746:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:05:49,746:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 488226798260150272(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:05:49.746(Timestamp)
2020-11-16 16:05:49,783:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:05:49,784:INFO Derry-Async-10 (AsyncTaskService.java:26) - 线程Derry-Async-10 执行异步任务：8
2020-11-16 16:05:49,890:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:05:49,891:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:05:49,952:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:05:49,953:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:05:49,953:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 488226799124176896(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:05:49.952(Timestamp)
2020-11-16 16:05:49,995:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:05:49,995:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 16:05:50,859:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:05:50,859:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:05:50,918:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:05:50,919:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:05:50,919:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 488226803175874560(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:05:50.918(Timestamp)
2020-11-16 16:05:50,954:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:05:50,955:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 16:05:50,991:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 16:05:50,992:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 16:05:50,992:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:05:51,059:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:05:51,059:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 16:05:51,171:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:05:51,172:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:05:51,232:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:05:51,232:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:05:51,233:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 488226804492886016(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:05:51.232(Timestamp)
2020-11-16 16:05:51,271:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:05:51,271:INFO Derry-Async-3 (AsyncTaskService.java:26) - 线程Derry-Async-3 执行异步任务：8
2020-11-16 16:05:51,650:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:05:51,650:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:05:51,709:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:05:51,709:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:05:51,709:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 488226806493569024(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:05:51.709(Timestamp)
2020-11-16 16:05:51,744:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:05:51,745:INFO Derry-Async-4 (AsyncTaskService.java:26) - 线程Derry-Async-4 执行异步任务：8
2020-11-16 16:09:46,725:INFO main (StartupInfoLogger.java:55) - Starting MyBootApplication on DESKTOP-N2UAHBH with PID 572 (D:\idea-work\MyBoot\target\classes started by xiaoh in D:\idea-work\MyBoot)
2020-11-16 16:09:46,731:INFO main (SpringApplication.java:655) - The following profiles are active: dev
2020-11-16 16:09:47,342:INFO main (RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-16 16:09:47,343:INFO main (RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-16 16:09:47,363:INFO main (RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
2020-11-16 16:09:47,525:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'asyncTaskConfig' of type [com.xhg.threadPool.AsyncTaskConfig$$EnhancerBySpringCGLIB$$ca165753] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:09:47,581:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:09:47,706:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:09:47,826:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:09:48,007:INFO main (TomcatWebServer.java:92) - Tomcat initialized with port(s): 9000 (http)
2020-11-16 16:09:48,013:INFO main (DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-9000"]
2020-11-16 16:09:48,013:INFO main (DirectJDKLog.java:173) - Starting service [Tomcat]
2020-11-16 16:09:48,014:INFO main (DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-11-16 16:09:48,090:INFO main (DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-11-16 16:09:48,091:INFO main (ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1331 ms
2020-11-16 16:09:48,746:INFO main (SentinelWebAutoConfiguration.java:80) - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-11-16 16:09:48,822:INFO main (PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-16 16:09:48,833:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService
2020-11-16 16:09:48,834:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskExecutor'
2020-11-16 16:09:49,110:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskScheduler'
2020-11-16 16:09:49,261:INFO main (DocumentationPluginsBootstrapper.java:160) - Context refreshed
2020-11-16 16:09:49,269:INFO main (DocumentationPluginsBootstrapper.java:163) - Found 1 custom documentation plugin(s)
2020-11-16 16:09:49,286:INFO main (ApiListingReferenceScanner.java:41) - Scanning for api listing references
2020-11-16 16:09:49,430:INFO main (AbstractConnectionFactory.java:524) - Attempting to connect to: [121.43.158.136:5672]
2020-11-16 16:09:49,558:INFO main (AbstractConnectionFactory.java:497) - Created new connection: rabbitConnectionFactory#26f0141:0/SimpleConnection@2e85e3f1 [delegate=amqp://userMQ@121.43.158.136:5672/hostDemo, localPort= 65193]
2020-11-16 16:09:50,508:INFO main (DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-9000"]
2020-11-16 16:09:50,523:INFO main (TomcatWebServer.java:204) - Tomcat started on port(s): 9000 (http) with context path '/boot'
2020-11-16 16:09:50,610:INFO main (StartupInfoLogger.java:61) - Started MyBootApplication in 4.38 seconds (JVM running for 5.156)
2020-11-16 16:09:56,075:INFO http-nio-9000-exec-1 (DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-16 16:09:56,075:INFO http-nio-9000-exec-1 (FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-11-16 16:09:56,080:INFO http-nio-9000-exec-1 (FrameworkServlet.java:547) - Completed initialization in 5 ms
2020-11-16 16:09:56,195:INFO http-nio-9000-exec-1 (EpollProvider.java:68) - Starting without optional epoll library
2020-11-16 16:09:56,197:INFO http-nio-9000-exec-1 (KqueueProvider.java:70) - Starting without optional kqueue library
2020-11-16 16:09:56,894:INFO http-nio-9000-exec-1 (HikariDataSource.java:110) - HikariPool-1 - Starting...
2020-11-16 16:09:57,289:INFO http-nio-9000-exec-1 (PoolBase.java:527) - HikariPool-1 - Driver does not support get/set network timeout for connections. (com.mysql.jdbc.JDBC4Connection.getNetworkTimeout()I)
2020-11-16 16:09:57,345:INFO http-nio-9000-exec-1 (HikariDataSource.java:123) - HikariPool-1 - Start completed.
2020-11-16 16:09:57,351:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:09:57,363:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:09:57,442:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:09:57,451:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:09:57,452:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488227837206028288(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:09:57.45(Timestamp)
2020-11-16 16:09:57,484:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:09:57,489:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 16:09:57,709:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:09:57,710:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:09:57,774:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:09:57,775:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:09:57,775:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 488227838569177088(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:09:57.775(Timestamp)
2020-11-16 16:09:57,808:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:09:57,808:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 16:13:20,001:INFO main (StartupInfoLogger.java:55) - Starting MyBootApplication on DESKTOP-N2UAHBH with PID 14392 (D:\idea-work\MyBoot\target\classes started by xiaoh in D:\idea-work\MyBoot)
2020-11-16 16:13:20,008:INFO main (SpringApplication.java:655) - The following profiles are active: dev
2020-11-16 16:13:20,608:INFO main (RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-16 16:13:20,609:INFO main (RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-16 16:13:20,628:INFO main (RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-11-16 16:13:20,792:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'asyncTaskConfig' of type [com.xhg.threadPool.AsyncTaskConfig$$EnhancerBySpringCGLIB$$c9dfeb74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:13:20,851:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:13:20,980:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:13:21,061:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:13:21,256:INFO main (TomcatWebServer.java:92) - Tomcat initialized with port(s): 9000 (http)
2020-11-16 16:13:21,261:INFO main (DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-9000"]
2020-11-16 16:13:21,262:INFO main (DirectJDKLog.java:173) - Starting service [Tomcat]
2020-11-16 16:13:21,262:INFO main (DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-11-16 16:13:21,333:INFO main (DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-11-16 16:13:21,334:INFO main (ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1296 ms
2020-11-16 16:13:21,970:INFO main (SentinelWebAutoConfiguration.java:80) - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-11-16 16:13:22,045:INFO main (PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-16 16:13:22,056:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService
2020-11-16 16:13:22,056:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskExecutor'
2020-11-16 16:13:22,323:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskScheduler'
2020-11-16 16:13:22,468:INFO main (DocumentationPluginsBootstrapper.java:160) - Context refreshed
2020-11-16 16:13:22,476:INFO main (DocumentationPluginsBootstrapper.java:163) - Found 1 custom documentation plugin(s)
2020-11-16 16:13:22,495:INFO main (ApiListingReferenceScanner.java:41) - Scanning for api listing references
2020-11-16 16:13:22,651:INFO main (AbstractConnectionFactory.java:524) - Attempting to connect to: [121.43.158.136:5672]
2020-11-16 16:13:22,769:INFO main (AbstractConnectionFactory.java:497) - Created new connection: rabbitConnectionFactory#2322e56f:0/SimpleConnection@1d585fb [delegate=amqp://userMQ@121.43.158.136:5672/hostDemo, localPort= 65324]
2020-11-16 16:13:23,532:INFO main (DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-9000"]
2020-11-16 16:13:23,547:INFO main (TomcatWebServer.java:204) - Tomcat started on port(s): 9000 (http) with context path '/boot'
2020-11-16 16:13:23,638:INFO main (StartupInfoLogger.java:61) - Started MyBootApplication in 4.098 seconds (JVM running for 4.837)
2020-11-16 16:13:30,299:INFO http-nio-9000-exec-2 (DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-16 16:13:30,299:INFO http-nio-9000-exec-2 (FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-11-16 16:13:30,306:INFO http-nio-9000-exec-2 (FrameworkServlet.java:547) - Completed initialization in 6 ms
2020-11-16 16:13:30,422:INFO http-nio-9000-exec-2 (EpollProvider.java:68) - Starting without optional epoll library
2020-11-16 16:13:30,424:INFO http-nio-9000-exec-2 (KqueueProvider.java:70) - Starting without optional kqueue library
2020-11-16 16:13:31,106:INFO http-nio-9000-exec-2 (HikariDataSource.java:110) - HikariPool-1 - Starting...
2020-11-16 16:13:31,558:INFO http-nio-9000-exec-2 (PoolBase.java:527) - HikariPool-1 - Driver does not support get/set network timeout for connections. (com.mysql.jdbc.JDBC4Connection.getNetworkTimeout()I)
2020-11-16 16:13:31,621:INFO http-nio-9000-exec-2 (HikariDataSource.java:123) - HikariPool-1 - Start completed.
2020-11-16 16:13:31,626:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:13:31,637:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:13:31,707:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:13:31,710:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:13:31,710:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:13:31,771:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:13:31,772:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:13:31,772:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:13:31,837:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:13:31,838:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:13:31,839:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 488228735894380544(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:13:31.714(Timestamp)
2020-11-16 16:13:31,880:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:13:31,881:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:13:31,882:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488228736137650176(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:13:31.772(Timestamp)
2020-11-16 16:13:31,883:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 16:13:31,912:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:13:31,913:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 16:13:31,913:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:13:31,914:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 488228736414474240(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:13:31.838(Timestamp)
2020-11-16 16:13:31,945:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:13:31,946:INFO Derry-Async-3 (AsyncTaskService.java:26) - 线程Derry-Async-3 执行异步任务：8
2020-11-16 16:13:32,046:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 16:13:32,047:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 16:13:32,047:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:13:32,117:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:13:32,117:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 16:13:32,190:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:13:32,191:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:13:32,248:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:13:32,248:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:13:32,249:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 488228738134138880(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:13:32.248(Timestamp)
2020-11-16 16:13:32,290:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:13:32,291:INFO Derry-Async-4 (AsyncTaskService.java:26) - 线程Derry-Async-4 执行异步任务：8
2020-11-16 16:13:32,402:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:13:32,402:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:13:32,472:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:13:32,472:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:13:32,473:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 488228739073662976(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:13:32.472(Timestamp)
2020-11-16 16:13:32,507:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:13:32,507:INFO Derry-Async-5 (AsyncTaskService.java:26) - 线程Derry-Async-5 执行异步任务：8
2020-11-16 16:13:32,758:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:13:32,760:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:13:32,819:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:13:32,820:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:13:32,821:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 488228740529086464(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:13:32.819(Timestamp)
2020-11-16 16:13:32,854:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:13:32,854:INFO Derry-Async-6 (AsyncTaskService.java:26) - 线程Derry-Async-6 执行异步任务：8
2020-11-16 16:13:32,887:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 16:13:32,888:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 16:13:32,888:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:13:32,955:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:13:32,956:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 16:13:33,024:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:13:33,025:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:13:33,086:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:13:33,087:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:13:33,088:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 488228741648965632(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:13:33.086(Timestamp)
2020-11-16 16:13:33,122:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:13:33,123:INFO Derry-Async-7 (AsyncTaskService.java:26) - 线程Derry-Async-7 执行异步任务：8
2020-11-16 16:13:33,172:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:13:33,173:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:13:33,232:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:13:33,233:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:13:33,233:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 488228742261334016(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:13:33.232(Timestamp)
2020-11-16 16:13:33,266:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:13:33,267:INFO Derry-Async-8 (AsyncTaskService.java:26) - 线程Derry-Async-8 执行异步任务：8
2020-11-16 16:13:33,342:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:13:33,342:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:13:33,405:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:13:33,406:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:13:33,406:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 488228742986948608(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:13:33.405(Timestamp)
2020-11-16 16:13:33,439:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:13:33,440:INFO Derry-Async-9 (AsyncTaskService.java:26) - 线程Derry-Async-9 执行异步任务：8
2020-11-16 16:13:33,465:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 16:13:33,466:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 16:13:33,466:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:13:33,646:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:13:33,647:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:13:33,718:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:13:33,718:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:13:33,719:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488228744299765760(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:13:33.718(Timestamp)
2020-11-16 16:13:33,755:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:13:33,756:INFO Derry-Async-10 (AsyncTaskService.java:26) - 线程Derry-Async-10 执行异步任务：8
2020-11-16 16:13:33,774:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:13:33,775:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 16:14:10,760:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:14:10,761:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:14:10,819:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:14:10,820:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:14:10,821:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 488228899916832768(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:14:10.82(Timestamp)
2020-11-16 16:14:10,854:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:14:10,854:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 16:14:10,995:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:14:10,996:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:14:11,072:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:14:11,073:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:14:11,074:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 488228900973797376(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:14:11.072(Timestamp)
2020-11-16 16:14:11,106:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:14:11,106:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 16:14:11,138:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 16:14:11,139:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 16:14:11,139:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:14:11,215:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:14:11,215:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 16:14:11,191:ERROR http-nio-9000-exec-9 (DirectJDKLog.java:175) - Servlet.service() for servlet [dispatcherServlet] in context with path [/boot] threw exception [Request processing failed; nested exception is java.lang.reflect.UndeclaredThrowableException] with root cause
com.alibaba.csp.sentinel.slots.block.flow.FlowException: null
2020-11-16 16:14:11,675:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:14:11,676:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:14:11,737:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:14:11,738:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:14:11,739:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 488228903767203840(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:14:11.738(Timestamp)
2020-11-16 16:14:11,773:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:14:11,774:INFO Derry-Async-3 (AsyncTaskService.java:26) - 线程Derry-Async-3 执行异步任务：8
2020-11-16 16:14:12,096:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:14:12,096:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:14:12,156:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:14:12,156:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:14:12,156:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 488228905520422912(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:14:12.156(Timestamp)
2020-11-16 16:14:12,191:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:14:12,191:INFO Derry-Async-4 (AsyncTaskService.java:26) - 线程Derry-Async-4 执行异步任务：8
2020-11-16 16:14:12,313:ERROR http-nio-9000-exec-1 (DirectJDKLog.java:175) - Servlet.service() for servlet [dispatcherServlet] in context with path [/boot] threw exception [Request processing failed; nested exception is java.lang.reflect.UndeclaredThrowableException] with root cause
com.alibaba.csp.sentinel.slots.block.flow.FlowException: null
2020-11-16 16:14:12,984:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:14:12,985:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:14:13,046:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:14:13,047:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:14:13,047:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 488228909253353472(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:14:13.046(Timestamp)
2020-11-16 16:14:13,083:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:14:13,084:INFO Derry-Async-5 (AsyncTaskService.java:26) - 线程Derry-Async-5 执行异步任务：8
2020-11-16 16:14:13,110:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 16:14:13,111:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 16:14:13,112:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:14:13,179:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:14:13,179:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 16:14:13,327:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:14:13,327:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:14:13,400:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:14:13,401:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:14:13,403:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 488228910742331392(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:14:13.401(Timestamp)
2020-11-16 16:14:13,435:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:14:13,435:INFO Derry-Async-6 (AsyncTaskService.java:26) - 线程Derry-Async-6 执行异步任务：8
2020-11-16 16:14:13,765:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:14:13,766:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:14:13,829:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:14:13,831:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:14:13,833:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 488228912541687808(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:14:13.83(Timestamp)
2020-11-16 16:14:13,868:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:14:13,869:INFO Derry-Async-7 (AsyncTaskService.java:26) - 线程Derry-Async-7 执行异步任务：8
2020-11-16 16:14:14,209:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:14:14,210:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:14:14,280:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:14:14,281:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:14:14,281:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 488228914429124608(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:14:14.28(Timestamp)
2020-11-16 16:14:14,306:ERROR http-nio-9000-exec-8 (DirectJDKLog.java:175) - Servlet.service() for servlet [dispatcherServlet] in context with path [/boot] threw exception [Request processing failed; nested exception is java.lang.reflect.UndeclaredThrowableException] with root cause
com.alibaba.csp.sentinel.slots.block.flow.FlowException: null
2020-11-16 16:14:14,313:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:14:14,313:INFO Derry-Async-8 (AsyncTaskService.java:26) - 线程Derry-Async-8 执行异步任务：8
2020-11-16 16:14:14,339:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 16:14:14,340:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 16:14:14,340:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:14:14,413:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:14:14,413:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 16:14:14,688:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:14:14,688:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:14:14,747:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:14:14,748:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:14:14,748:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 488228916392058880(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:14:14.748(Timestamp)
2020-11-16 16:14:14,786:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:14:14,786:INFO Derry-Async-9 (AsyncTaskService.java:26) - 线程Derry-Async-9 执行异步任务：8
2020-11-16 16:14:15,576:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:14:15,577:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:14:15,636:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:14:15,641:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:14:15,642:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 488228920124989440(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:14:15.638(Timestamp)
2020-11-16 16:14:15,678:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:14:15,678:INFO Derry-Async-10 (AsyncTaskService.java:26) - 线程Derry-Async-10 执行异步任务：8
2020-11-16 16:14:15,762:ERROR http-nio-9000-exec-1 (DirectJDKLog.java:175) - Servlet.service() for servlet [dispatcherServlet] in context with path [/boot] threw exception [Request processing failed; nested exception is java.lang.reflect.UndeclaredThrowableException] with root cause
com.alibaba.csp.sentinel.slots.block.flow.FlowException: null
2020-11-16 16:14:16,362:ERROR http-nio-9000-exec-4 (DirectJDKLog.java:175) - Servlet.service() for servlet [dispatcherServlet] in context with path [/boot] threw exception [Request processing failed; nested exception is java.lang.reflect.UndeclaredThrowableException] with root cause
com.alibaba.csp.sentinel.slots.block.flow.FlowException: null
2020-11-16 16:14:16,481:ERROR http-nio-9000-exec-6 (DirectJDKLog.java:175) - Servlet.service() for servlet [dispatcherServlet] in context with path [/boot] threw exception [Request processing failed; nested exception is java.lang.reflect.UndeclaredThrowableException] with root cause
com.alibaba.csp.sentinel.slots.block.flow.FlowException: null
2020-11-16 16:14:18,635:ERROR http-nio-9000-exec-2 (DirectJDKLog.java:175) - Servlet.service() for servlet [dispatcherServlet] in context with path [/boot] threw exception [Request processing failed; nested exception is java.lang.reflect.UndeclaredThrowableException] with root cause
com.alibaba.csp.sentinel.slots.block.flow.FlowException: null
2020-11-16 16:14:18,833:ERROR http-nio-9000-exec-1 (DirectJDKLog.java:175) - Servlet.service() for servlet [dispatcherServlet] in context with path [/boot] threw exception [Request processing failed; nested exception is java.lang.reflect.UndeclaredThrowableException] with root cause
com.alibaba.csp.sentinel.slots.block.flow.FlowException: null
2020-11-16 16:16:20,005:INFO main (StartupInfoLogger.java:55) - Starting MyBootApplication on DESKTOP-N2UAHBH with PID 18340 (D:\idea-work\MyBoot\target\classes started by xiaoh in D:\idea-work\MyBoot)
2020-11-16 16:16:20,011:INFO main (SpringApplication.java:655) - The following profiles are active: dev
2020-11-16 16:16:20,619:INFO main (RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-16 16:16:20,621:INFO main (RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-16 16:16:20,639:INFO main (RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-11-16 16:16:20,815:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'asyncTaskConfig' of type [com.xhg.threadPool.AsyncTaskConfig$$EnhancerBySpringCGLIB$$b1482fae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:16:20,897:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:16:21,032:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:16:21,111:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:16:21,345:INFO main (TomcatWebServer.java:92) - Tomcat initialized with port(s): 9000 (http)
2020-11-16 16:16:21,352:INFO main (DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-9000"]
2020-11-16 16:16:21,352:INFO main (DirectJDKLog.java:173) - Starting service [Tomcat]
2020-11-16 16:16:21,353:INFO main (DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-11-16 16:16:21,432:INFO main (DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-11-16 16:16:21,432:INFO main (ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1394 ms
2020-11-16 16:16:22,309:INFO main (SentinelWebAutoConfiguration.java:80) - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-11-16 16:16:22,382:INFO main (PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-16 16:16:22,393:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService
2020-11-16 16:16:22,394:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskExecutor'
2020-11-16 16:16:22,673:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskScheduler'
2020-11-16 16:16:22,832:INFO main (DocumentationPluginsBootstrapper.java:160) - Context refreshed
2020-11-16 16:16:22,840:INFO main (DocumentationPluginsBootstrapper.java:163) - Found 1 custom documentation plugin(s)
2020-11-16 16:16:22,861:INFO main (ApiListingReferenceScanner.java:41) - Scanning for api listing references
2020-11-16 16:16:23,012:INFO main (AbstractConnectionFactory.java:524) - Attempting to connect to: [121.43.158.136:5672]
2020-11-16 16:16:23,178:INFO main (AbstractConnectionFactory.java:497) - Created new connection: rabbitConnectionFactory#14efa279:0/SimpleConnection@77cd235b [delegate=amqp://userMQ@121.43.158.136:5672/hostDemo, localPort= 65533]
2020-11-16 16:16:24,104:INFO main (DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-9000"]
2020-11-16 16:16:24,119:INFO main (TomcatWebServer.java:204) - Tomcat started on port(s): 9000 (http) with context path '/boot'
2020-11-16 16:16:24,204:INFO main (StartupInfoLogger.java:61) - Started MyBootApplication in 4.666 seconds (JVM running for 5.373)
2020-11-16 16:16:32,256:INFO http-nio-9000-exec-1 (DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-16 16:16:32,257:INFO http-nio-9000-exec-1 (FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-11-16 16:16:32,262:INFO http-nio-9000-exec-1 (FrameworkServlet.java:547) - Completed initialization in 5 ms
2020-11-16 16:16:32,373:INFO http-nio-9000-exec-1 (EpollProvider.java:68) - Starting without optional epoll library
2020-11-16 16:16:32,375:INFO http-nio-9000-exec-1 (KqueueProvider.java:70) - Starting without optional kqueue library
2020-11-16 16:16:33,084:INFO http-nio-9000-exec-1 (HikariDataSource.java:110) - HikariPool-1 - Starting...
2020-11-16 16:16:33,464:INFO http-nio-9000-exec-1 (PoolBase.java:527) - HikariPool-1 - Driver does not support get/set network timeout for connections. (com.mysql.jdbc.JDBC4Connection.getNetworkTimeout()I)
2020-11-16 16:16:33,736:INFO http-nio-9000-exec-1 (HikariDataSource.java:123) - HikariPool-1 - Start completed.
2020-11-16 16:16:33,744:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:16:33,755:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:16:33,821:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:16:33,824:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:16:33,825:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:16:33,887:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:16:33,888:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:16:33,888:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:16:33,946:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:16:33,946:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:16:33,946:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:16:34,005:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:16:34,005:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:16:34,006:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488229499740053504(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:16:33.829(Timestamp)
2020-11-16 16:16:34,020:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:16:34,021:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:16:34,036:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:16:34,036:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:16:34,038:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 488229499987517440(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:16:33.888(Timestamp)
2020-11-16 16:16:34,039:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 16:16:34,068:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:16:34,068:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 16:16:34,068:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:16:34,071:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 488229500230787072(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:16:33.946(Timestamp)
2020-11-16 16:16:34,082:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:16:34,083:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:16:34,084:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 488229500478251008(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:16:34.005(Timestamp)
2020-11-16 16:16:34,109:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:16:34,110:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:16:34,110:INFO Derry-Async-3 (AsyncTaskService.java:26) - 线程Derry-Async-3 执行异步任务：8
2020-11-16 16:16:34,111:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 488229500801212416(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:16:34.082(Timestamp)
2020-11-16 16:16:34,112:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:16:34,113:INFO Derry-Async-4 (AsyncTaskService.java:26) - 线程Derry-Async-4 执行异步任务：8
2020-11-16 16:16:34,147:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:16:34,147:INFO Derry-Async-5 (AsyncTaskService.java:26) - 线程Derry-Async-5 执行异步任务：8
2020-11-16 16:16:34,175:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 16:16:34,175:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 16:16:34,175:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:16:34,241:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:16:34,241:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 16:17:09,997:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:17:09,998:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:17:10,058:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:17:10,059:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:17:10,060:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 488229651699687424(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:17:10.059(Timestamp)
2020-11-16 16:17:10,090:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:17:10,091:INFO Derry-Async-6 (AsyncTaskService.java:26) - 线程Derry-Async-6 执行异步任务：8
2020-11-16 16:17:10,115:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 16:17:10,115:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 16:17:10,115:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:17:10,175:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:17:10,175:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 16:18:27,526:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:18:27,528:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:18:27,587:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:18:27,588:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:18:27,590:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 488229976875687936(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:18:27.587(Timestamp)
2020-11-16 16:18:27,619:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:18:27,621:INFO Derry-Async-7 (AsyncTaskService.java:26) - 线程Derry-Async-7 执行异步任务：8
2020-11-16 16:18:41,652:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:18:41,652:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:18:41,711:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:18:41,712:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:18:41,713:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 488230036116037632(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:18:41.711(Timestamp)
2020-11-16 16:18:41,745:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:18:41,747:INFO Derry-Async-8 (AsyncTaskService.java:26) - 线程Derry-Async-8 执行异步任务：8
2020-11-16 16:18:42,281:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:18:42,281:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:18:42,340:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:18:42,341:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:18:42,342:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488230038754254848(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:18:42.34(Timestamp)
2020-11-16 16:18:42,372:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:18:42,372:INFO Derry-Async-9 (AsyncTaskService.java:26) - 线程Derry-Async-9 执行异步任务：8
2020-11-16 16:18:42,395:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 16:18:42,396:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 16:18:42,396:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:18:42,456:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:18:42,457:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 16:18:42,827:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:18:42,829:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:18:42,887:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:18:42,888:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:18:42,890:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 488230041048539136(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:18:42.887(Timestamp)
2020-11-16 16:18:42,919:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:18:42,920:INFO Derry-Async-10 (AsyncTaskService.java:26) - 线程Derry-Async-10 执行异步任务：8
2020-11-16 16:19:36,115:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:19:36,116:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:19:36,173:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:19:36,173:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:19:36,174:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 488230264546222080(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:19:36.173(Timestamp)
2020-11-16 16:19:36,203:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:19:36,204:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 16:19:36,315:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:19:36,316:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:19:36,375:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:19:36,375:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:19:36,376:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488230265393471488(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:19:36.375(Timestamp)
2020-11-16 16:19:36,382:ERROR http-nio-9000-exec-6 (DirectJDKLog.java:175) - Servlet.service() for servlet [dispatcherServlet] in context with path [/boot] threw exception [Request processing failed; nested exception is java.lang.reflect.UndeclaredThrowableException] with root cause
com.alibaba.csp.sentinel.slots.block.flow.FlowException: null
2020-11-16 16:19:36,405:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:19:36,406:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 16:19:36,428:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 16:19:36,429:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 16:19:36,429:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:19:36,496:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:19:36,497:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 16:19:36,676:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:19:36,676:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:19:36,716:ERROR http-nio-9000-exec-8 (DirectJDKLog.java:175) - Servlet.service() for servlet [dispatcherServlet] in context with path [/boot] threw exception [Request processing failed; nested exception is java.lang.reflect.UndeclaredThrowableException] with root cause
com.alibaba.csp.sentinel.slots.block.flow.FlowException: null
2020-11-16 16:19:36,734:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:19:36,734:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:19:36,735:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 488230266899226624(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:19:36.734(Timestamp)
2020-11-16 16:19:36,767:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:19:36,767:INFO Derry-Async-5 (AsyncTaskService.java:26) - 线程Derry-Async-5 执行异步任务：8
2020-11-16 16:19:36,878:ERROR http-nio-9000-exec-9 (DirectJDKLog.java:175) - Servlet.service() for servlet [dispatcherServlet] in context with path [/boot] threw exception [Request processing failed; nested exception is java.lang.reflect.UndeclaredThrowableException] with root cause
com.alibaba.csp.sentinel.slots.block.flow.FlowException: null
2020-11-16 16:19:39,297:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:19:39,297:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:19:39,360:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:19:39,361:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:19:39,361:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 488230277913468928(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:19:39.36(Timestamp)
2020-11-16 16:19:39,390:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:19:39,391:INFO Derry-Async-3 (AsyncTaskService.java:26) - 线程Derry-Async-3 执行异步任务：8
2020-11-16 16:20:48,365:INFO main (StartupInfoLogger.java:55) - Starting MyBootApplication on DESKTOP-N2UAHBH with PID 16316 (D:\idea-work\MyBoot\target\classes started by xiaoh in D:\idea-work\MyBoot)
2020-11-16 16:20:48,371:INFO main (SpringApplication.java:655) - The following profiles are active: dev
2020-11-16 16:20:48,977:INFO main (RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-16 16:20:48,979:INFO main (RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-16 16:20:48,998:INFO main (RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-11-16 16:20:49,166:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'asyncTaskConfig' of type [com.xhg.threadPool.AsyncTaskConfig$$EnhancerBySpringCGLIB$$9ce3ec12] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:20:49,219:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:20:49,344:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:20:49,418:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:20:49,613:INFO main (TomcatWebServer.java:92) - Tomcat initialized with port(s): 9000 (http)
2020-11-16 16:20:49,618:INFO main (DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-9000"]
2020-11-16 16:20:49,619:INFO main (DirectJDKLog.java:173) - Starting service [Tomcat]
2020-11-16 16:20:49,619:INFO main (DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-11-16 16:20:49,692:INFO main (DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-11-16 16:20:49,692:INFO main (ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1293 ms
2020-11-16 16:20:50,324:INFO main (SentinelWebAutoConfiguration.java:80) - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-11-16 16:20:50,399:INFO main (PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-16 16:20:50,410:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService
2020-11-16 16:20:50,411:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskExecutor'
2020-11-16 16:20:50,681:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskScheduler'
2020-11-16 16:20:50,823:INFO main (DocumentationPluginsBootstrapper.java:160) - Context refreshed
2020-11-16 16:20:50,831:INFO main (DocumentationPluginsBootstrapper.java:163) - Found 1 custom documentation plugin(s)
2020-11-16 16:20:50,848:INFO main (ApiListingReferenceScanner.java:41) - Scanning for api listing references
2020-11-16 16:20:50,997:INFO main (AbstractConnectionFactory.java:524) - Attempting to connect to: [121.43.158.136:5672]
2020-11-16 16:20:51,159:INFO main (AbstractConnectionFactory.java:497) - Created new connection: rabbitConnectionFactory#2a8dd942:0/SimpleConnection@29c25bbc [delegate=amqp://userMQ@121.43.158.136:5672/hostDemo, localPort= 49318]
2020-11-16 16:20:51,812:INFO main (DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-9000"]
2020-11-16 16:20:51,827:INFO main (TomcatWebServer.java:204) - Tomcat started on port(s): 9000 (http) with context path '/boot'
2020-11-16 16:20:51,913:INFO main (StartupInfoLogger.java:61) - Started MyBootApplication in 3.985 seconds (JVM running for 4.789)
2020-11-16 16:24:16,602:INFO http-nio-9000-exec-1 (DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-16 16:24:16,602:INFO http-nio-9000-exec-1 (FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-11-16 16:24:16,608:INFO http-nio-9000-exec-1 (FrameworkServlet.java:547) - Completed initialization in 6 ms
2020-11-16 16:24:16,809:INFO http-nio-9000-exec-1 (EpollProvider.java:68) - Starting without optional epoll library
2020-11-16 16:24:16,811:INFO http-nio-9000-exec-1 (KqueueProvider.java:70) - Starting without optional kqueue library
2020-11-16 16:24:17,341:INFO http-nio-9000-exec-1 (HikariDataSource.java:110) - HikariPool-1 - Starting...
2020-11-16 16:24:17,780:INFO http-nio-9000-exec-1 (PoolBase.java:527) - HikariPool-1 - Driver does not support get/set network timeout for connections. (com.mysql.jdbc.JDBC4Connection.getNetworkTimeout()I)
2020-11-16 16:24:17,838:INFO http-nio-9000-exec-1 (HikariDataSource.java:123) - HikariPool-1 - Start completed.
2020-11-16 16:24:17,858:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:24:17,879:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:24:17,946:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:24:17,955:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:24:17,956:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488231446425591808(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:24:17.955(Timestamp)
2020-11-16 16:24:17,986:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:24:17,990:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 16:24:25,937:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:24:25,938:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:24:26,002:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:24:26,006:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:24:26,009:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 488231480181350400(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:24:26.003(Timestamp)
2020-11-16 16:24:26,040:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:24:26,042:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 16:24:26,110:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:24:26,111:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:24:26,169:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:24:26,170:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:24:26,171:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 488231480877604864(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:24:26.169(Timestamp)
2020-11-16 16:24:26,205:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:24:26,206:INFO Derry-Async-3 (AsyncTaskService.java:26) - 线程Derry-Async-3 执行异步任务：8
2020-11-16 16:24:26,234:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 16:24:26,234:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 16:24:26,235:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:24:26,295:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:24:26,295:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 16:24:27,033:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:24:27,035:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:24:27,093:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:24:27,094:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:24:27,094:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 488231484753141760(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:24:27.093(Timestamp)
2020-11-16 16:24:27,123:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:24:27,123:INFO Derry-Async-4 (AsyncTaskService.java:26) - 线程Derry-Async-4 执行异步任务：8
2020-11-16 16:24:27,170:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:24:27,170:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:24:27,226:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:24:27,227:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:24:27,227:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 488231485310984192(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:24:27.226(Timestamp)
2020-11-16 16:24:27,264:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:24:27,264:INFO Derry-Async-5 (AsyncTaskService.java:26) - 线程Derry-Async-5 执行异步任务：8
2020-11-16 16:28:50,558:INFO main (StartupInfoLogger.java:55) - Starting MyBootApplication on DESKTOP-N2UAHBH with PID 15956 (D:\idea-work\MyBoot\target\classes started by xiaoh in D:\idea-work\MyBoot)
2020-11-16 16:28:50,564:INFO main (SpringApplication.java:655) - The following profiles are active: dev
2020-11-16 16:28:51,161:INFO main (RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-16 16:28:51,163:INFO main (RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-16 16:28:51,182:INFO main (RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-11-16 16:28:51,351:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'asyncTaskConfig' of type [com.xhg.threadPool.AsyncTaskConfig$$EnhancerBySpringCGLIB$$7076bbee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:28:51,406:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:28:51,531:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:28:51,604:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:28:51,813:INFO main (TomcatWebServer.java:92) - Tomcat initialized with port(s): 9000 (http)
2020-11-16 16:28:51,818:INFO main (DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-9000"]
2020-11-16 16:28:51,819:INFO main (DirectJDKLog.java:173) - Starting service [Tomcat]
2020-11-16 16:28:51,819:INFO main (DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-11-16 16:28:51,891:INFO main (DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-11-16 16:28:51,891:INFO main (ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1299 ms
2020-11-16 16:28:52,539:INFO main (SentinelWebAutoConfiguration.java:80) - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-11-16 16:28:52,613:INFO main (PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-16 16:28:52,623:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService
2020-11-16 16:28:52,624:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskExecutor'
2020-11-16 16:28:52,894:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskScheduler'
2020-11-16 16:28:53,035:INFO main (DocumentationPluginsBootstrapper.java:160) - Context refreshed
2020-11-16 16:28:53,043:INFO main (DocumentationPluginsBootstrapper.java:163) - Found 1 custom documentation plugin(s)
2020-11-16 16:28:53,061:INFO main (ApiListingReferenceScanner.java:41) - Scanning for api listing references
2020-11-16 16:28:53,209:INFO main (AbstractConnectionFactory.java:524) - Attempting to connect to: [121.43.158.136:5672]
2020-11-16 16:28:53,331:INFO main (AbstractConnectionFactory.java:497) - Created new connection: rabbitConnectionFactory#570a62a5:0/SimpleConnection@47162173 [delegate=amqp://userMQ@121.43.158.136:5672/hostDemo, localPort= 49646]
2020-11-16 16:28:53,980:INFO main (DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-9000"]
2020-11-16 16:28:53,994:INFO main (TomcatWebServer.java:204) - Tomcat started on port(s): 9000 (http) with context path '/boot'
2020-11-16 16:28:54,078:INFO main (StartupInfoLogger.java:61) - Started MyBootApplication in 3.96 seconds (JVM running for 4.688)
2020-11-16 16:29:24,079:INFO http-nio-9000-exec-1 (DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-16 16:29:24,079:INFO http-nio-9000-exec-1 (FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-11-16 16:29:24,084:INFO http-nio-9000-exec-1 (FrameworkServlet.java:547) - Completed initialization in 5 ms
2020-11-16 16:29:24,293:INFO http-nio-9000-exec-1 (EpollProvider.java:68) - Starting without optional epoll library
2020-11-16 16:29:24,295:INFO http-nio-9000-exec-1 (KqueueProvider.java:70) - Starting without optional kqueue library
2020-11-16 16:29:24,853:INFO http-nio-9000-exec-1 (HikariDataSource.java:110) - HikariPool-1 - Starting...
2020-11-16 16:29:25,196:INFO http-nio-9000-exec-1 (PoolBase.java:527) - HikariPool-1 - Driver does not support get/set network timeout for connections. (com.mysql.jdbc.JDBC4Connection.getNetworkTimeout()I)
2020-11-16 16:29:25,250:INFO http-nio-9000-exec-1 (HikariDataSource.java:123) - HikariPool-1 - Start completed.
2020-11-16 16:29:25,256:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:29:25,267:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:29:25,354:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:29:25,366:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:29:25,368:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488232735800778752(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:29:25.366(Timestamp)
2020-11-16 16:29:25,404:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:29:25,408:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 16:30:42,545:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:30:42,546:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:30:42,606:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:30:42,611:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:30:42,615:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - ==> Parameters: 488233059773014016(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:30:42.607(Timestamp)
2020-11-16 16:30:42,646:DEBUG http-nio-9000-exec-8 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:30:42,647:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 16:30:42,653:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:30:42,654:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:30:42,713:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:30:42,713:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:30:42,714:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 488233060217610240(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:30:42.713(Timestamp)
2020-11-16 16:30:42,744:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:30:42,745:INFO Derry-Async-3 (AsyncTaskService.java:26) - 线程Derry-Async-3 执行异步任务：8
2020-11-16 16:30:42,777:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 16:30:42,777:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 16:30:42,777:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:30:42,839:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:30:42,840:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 16:30:43,310:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:30:43,310:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:30:43,371:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:30:43,374:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:30:43,375:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - ==> Parameters: 488233062981656576(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:30:43.372(Timestamp)
2020-11-16 16:30:43,404:DEBUG http-nio-9000-exec-2 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:30:43,404:INFO Derry-Async-4 (AsyncTaskService.java:26) - 线程Derry-Async-4 执行异步任务：8
2020-11-16 16:31:25,895:INFO main (StartupInfoLogger.java:55) - Starting MyBootApplication on DESKTOP-N2UAHBH with PID 17716 (D:\idea-work\MyBoot\target\classes started by xiaoh in D:\idea-work\MyBoot)
2020-11-16 16:31:25,900:INFO main (SpringApplication.java:655) - The following profiles are active: dev
2020-11-16 16:31:26,497:INFO main (RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-16 16:31:26,499:INFO main (RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-16 16:31:26,516:INFO main (RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-11-16 16:31:26,680:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'asyncTaskConfig' of type [com.xhg.threadPool.AsyncTaskConfig$$EnhancerBySpringCGLIB$$6a0ce6b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:31:26,733:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:31:26,859:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:31:26,934:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:31:27,132:INFO main (TomcatWebServer.java:92) - Tomcat initialized with port(s): 9000 (http)
2020-11-16 16:31:27,137:INFO main (DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-9000"]
2020-11-16 16:31:27,138:INFO main (DirectJDKLog.java:173) - Starting service [Tomcat]
2020-11-16 16:31:27,138:INFO main (DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-11-16 16:31:27,208:INFO main (DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-11-16 16:31:27,208:INFO main (ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1278 ms
2020-11-16 16:31:27,825:INFO main (SentinelWebAutoConfiguration.java:80) - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-11-16 16:31:27,896:INFO main (PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-16 16:31:27,907:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService
2020-11-16 16:31:27,908:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskExecutor'
2020-11-16 16:31:28,199:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskScheduler'
2020-11-16 16:31:28,344:INFO main (DocumentationPluginsBootstrapper.java:160) - Context refreshed
2020-11-16 16:31:28,352:INFO main (DocumentationPluginsBootstrapper.java:163) - Found 1 custom documentation plugin(s)
2020-11-16 16:31:28,371:INFO main (ApiListingReferenceScanner.java:41) - Scanning for api listing references
2020-11-16 16:31:28,512:INFO main (AbstractConnectionFactory.java:524) - Attempting to connect to: [121.43.158.136:5672]
2020-11-16 16:31:28,631:INFO main (AbstractConnectionFactory.java:497) - Created new connection: rabbitConnectionFactory#391d1e33:0/SimpleConnection@7573c7b5 [delegate=amqp://userMQ@121.43.158.136:5672/hostDemo, localPort= 49768]
2020-11-16 16:31:29,216:INFO main (DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-9000"]
2020-11-16 16:31:29,237:INFO main (TomcatWebServer.java:204) - Tomcat started on port(s): 9000 (http) with context path '/boot'
2020-11-16 16:31:29,325:INFO main (StartupInfoLogger.java:61) - Started MyBootApplication in 3.865 seconds (JVM running for 4.612)
2020-11-16 16:31:43,418:INFO http-nio-9000-exec-1 (DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-16 16:31:43,419:INFO http-nio-9000-exec-1 (FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-11-16 16:31:43,424:INFO http-nio-9000-exec-1 (FrameworkServlet.java:547) - Completed initialization in 5 ms
2020-11-16 16:31:43,535:INFO http-nio-9000-exec-1 (EpollProvider.java:68) - Starting without optional epoll library
2020-11-16 16:31:43,536:INFO http-nio-9000-exec-1 (KqueueProvider.java:70) - Starting without optional kqueue library
2020-11-16 16:31:44,218:INFO http-nio-9000-exec-1 (HikariDataSource.java:110) - HikariPool-1 - Starting...
2020-11-16 16:31:44,613:INFO http-nio-9000-exec-1 (PoolBase.java:527) - HikariPool-1 - Driver does not support get/set network timeout for connections. (com.mysql.jdbc.JDBC4Connection.getNetworkTimeout()I)
2020-11-16 16:31:44,658:INFO http-nio-9000-exec-1 (HikariDataSource.java:123) - HikariPool-1 - Start completed.
2020-11-16 16:31:44,663:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:31:44,673:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:31:44,742:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:31:44,752:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:31:44,753:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488233320428036096(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:31:44.752(Timestamp)
2020-11-16 16:31:44,782:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:31:44,785:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 16:32:22,116:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:32:22,116:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:32:22,179:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:32:22,180:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:32:22,182:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - ==> Parameters: 488233477408251904(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:32:22.179(Timestamp)
2020-11-16 16:32:22,194:ERROR http-nio-9000-exec-2 (DirectJDKLog.java:175) - Servlet.service() for servlet [dispatcherServlet] in context with path [/boot] threw exception [Request processing failed; nested exception is java.lang.reflect.UndeclaredThrowableException] with root cause
com.alibaba.csp.sentinel.slots.block.flow.FlowException: null
2020-11-16 16:32:22,211:DEBUG http-nio-9000-exec-4 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:32:22,212:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 16:32:22,256:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:32:22,256:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:32:22,298:ERROR http-nio-9000-exec-5 (DirectJDKLog.java:175) - Servlet.service() for servlet [dispatcherServlet] in context with path [/boot] threw exception [Request processing failed; nested exception is java.lang.reflect.UndeclaredThrowableException] with root cause
com.alibaba.csp.sentinel.slots.block.flow.FlowException: null
2020-11-16 16:32:22,311:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:32:22,312:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:32:22,313:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 488233477961900032(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:32:22.311(Timestamp)
2020-11-16 16:32:22,339:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:32:22,340:INFO Derry-Async-3 (AsyncTaskService.java:26) - 线程Derry-Async-3 执行异步任务：8
2020-11-16 16:32:22,367:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 16:32:22,367:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 16:32:22,368:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:32:22,427:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:32:22,428:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 16:32:25,264:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:32:25,264:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:32:25,324:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:32:25,327:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:32:25,329:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - ==> Parameters: 488233490603532288(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:32:25.325(Timestamp)
2020-11-16 16:32:25,362:DEBUG http-nio-9000-exec-6 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:32:25,362:INFO Derry-Async-4 (AsyncTaskService.java:26) - 线程Derry-Async-4 执行异步任务：8
2020-11-16 16:32:25,429:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:32:25,429:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:32:25,486:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:32:25,487:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:32:25,487:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - ==> Parameters: 488233491278815232(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:32:25.486(Timestamp)
2020-11-16 16:32:25,516:DEBUG http-nio-9000-exec-9 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:32:25,517:INFO Derry-Async-5 (AsyncTaskService.java:26) - 线程Derry-Async-5 执行异步任务：8
2020-11-16 16:32:26,354:DEBUG http-nio-9000-exec-10 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:32:26,354:DEBUG http-nio-9000-exec-10 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:32:26,412:DEBUG http-nio-9000-exec-10 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:32:26,413:DEBUG http-nio-9000-exec-10 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:32:26,414:DEBUG http-nio-9000-exec-10 (BaseJdbcLogger.java:159) - ==> Parameters: 488233495166935040(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:32:26.413(Timestamp)
2020-11-16 16:32:26,420:ERROR http-nio-9000-exec-8 (DirectJDKLog.java:175) - Servlet.service() for servlet [dispatcherServlet] in context with path [/boot] threw exception [Request processing failed; nested exception is java.lang.reflect.UndeclaredThrowableException] with root cause
com.alibaba.csp.sentinel.slots.block.flow.FlowException: null
2020-11-16 16:32:26,442:DEBUG http-nio-9000-exec-10 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:32:26,443:INFO Derry-Async-6 (AsyncTaskService.java:26) - 线程Derry-Async-6 执行异步任务：8
2020-11-16 16:32:26,470:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 16:32:26,470:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 16:32:26,470:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:32:26,513:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:32:26,514:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:32:26,527:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:32:26,527:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 16:32:26,576:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:32:26,577:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:32:26,578:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - ==> Parameters: 488233495850606592(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:32:26.576(Timestamp)
2020-11-16 16:32:26,614:DEBUG http-nio-9000-exec-7 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:32:26,615:INFO Derry-Async-7 (AsyncTaskService.java:26) - 线程Derry-Async-7 执行异步任务：8
2020-11-16 16:34:02,745:INFO main (StartupInfoLogger.java:55) - Starting MyBootApplication on DESKTOP-N2UAHBH with PID 16808 (D:\idea-work\MyBoot\target\classes started by xiaoh in D:\idea-work\MyBoot)
2020-11-16 16:34:02,750:INFO main (SpringApplication.java:655) - The following profiles are active: dev
2020-11-16 16:34:03,345:INFO main (RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-16 16:34:03,347:INFO main (RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-16 16:34:03,366:INFO main (RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-11-16 16:34:03,528:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'asyncTaskConfig' of type [com.xhg.threadPool.AsyncTaskConfig$$EnhancerBySpringCGLIB$$e29c043d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:34:03,581:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:34:03,703:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:34:03,818:INFO main (PostProcessorRegistrationDelegate.java:330) - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-16 16:34:03,969:INFO main (TomcatWebServer.java:92) - Tomcat initialized with port(s): 9000 (http)
2020-11-16 16:34:03,974:INFO main (DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-9000"]
2020-11-16 16:34:03,975:INFO main (DirectJDKLog.java:173) - Starting service [Tomcat]
2020-11-16 16:34:03,975:INFO main (DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-11-16 16:34:04,047:INFO main (DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-11-16 16:34:04,048:INFO main (ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1269 ms
2020-11-16 16:34:04,673:INFO main (SentinelWebAutoConfiguration.java:80) - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-11-16 16:34:04,750:INFO main (PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-16 16:34:04,761:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService
2020-11-16 16:34:04,762:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskExecutor'
2020-11-16 16:34:05,036:INFO main (ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'taskScheduler'
2020-11-16 16:34:05,179:INFO main (DocumentationPluginsBootstrapper.java:160) - Context refreshed
2020-11-16 16:34:05,187:INFO main (DocumentationPluginsBootstrapper.java:163) - Found 1 custom documentation plugin(s)
2020-11-16 16:34:05,204:INFO main (ApiListingReferenceScanner.java:41) - Scanning for api listing references
2020-11-16 16:34:05,345:INFO main (AbstractConnectionFactory.java:524) - Attempting to connect to: [121.43.158.136:5672]
2020-11-16 16:34:05,475:INFO main (AbstractConnectionFactory.java:497) - Created new connection: rabbitConnectionFactory#1511d157:0/SimpleConnection@3a8fb023 [delegate=amqp://userMQ@121.43.158.136:5672/hostDemo, localPort= 49884]
2020-11-16 16:34:06,095:INFO main (DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-9000"]
2020-11-16 16:34:06,109:INFO main (TomcatWebServer.java:204) - Tomcat started on port(s): 9000 (http) with context path '/boot'
2020-11-16 16:34:06,195:INFO main (StartupInfoLogger.java:61) - Started MyBootApplication in 3.884 seconds (JVM running for 4.597)
2020-11-16 16:34:14,524:INFO http-nio-9000-exec-1 (DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-16 16:34:14,524:INFO http-nio-9000-exec-1 (FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-11-16 16:34:14,529:INFO http-nio-9000-exec-1 (FrameworkServlet.java:547) - Completed initialization in 5 ms
2020-11-16 16:34:14,637:INFO http-nio-9000-exec-1 (EpollProvider.java:68) - Starting without optional epoll library
2020-11-16 16:34:14,639:INFO http-nio-9000-exec-1 (KqueueProvider.java:70) - Starting without optional kqueue library
2020-11-16 16:34:15,306:INFO http-nio-9000-exec-1 (HikariDataSource.java:110) - HikariPool-1 - Starting...
2020-11-16 16:34:15,692:INFO http-nio-9000-exec-1 (PoolBase.java:527) - HikariPool-1 - Driver does not support get/set network timeout for connections. (com.mysql.jdbc.JDBC4Connection.getNetworkTimeout()I)
2020-11-16 16:34:15,743:INFO http-nio-9000-exec-1 (HikariDataSource.java:123) - HikariPool-1 - Start completed.
2020-11-16 16:34:15,760:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:34:15,776:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:34:15,841:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:34:15,849:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:34:15,849:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - ==> Parameters: 488233954170593280(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:34:15.848(Timestamp)
2020-11-16 16:34:15,883:DEBUG http-nio-9000-exec-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:34:15,886:INFO Derry-Async-1 (AsyncTaskService.java:26) - 线程Derry-Async-1 执行异步任务：8
2020-11-16 16:35:12,569:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:35:12,570:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:35:12,626:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:35:12,628:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:35:12,629:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - ==> Parameters: 488234192318980096(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:35:12.627(Timestamp)
2020-11-16 16:35:12,655:INFO http-nio-9000-exec-4 (RedisController.java:78) - QPS达到阈值：开始限流
2020-11-16 16:35:12,658:DEBUG http-nio-9000-exec-3 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:35:12,658:INFO Derry-Async-2 (AsyncTaskService.java:26) - 线程Derry-Async-2 执行异步任务：8
2020-11-16 16:35:12,704:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: select * from sys_user where id = ? 
2020-11-16 16:35:12,704:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:35:12,757:INFO http-nio-9000-exec-6 (RedisController.java:78) - QPS达到阈值：开始限流
2020-11-16 16:35:12,761:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==      Total: 1
2020-11-16 16:35:12,762:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into orders ( id, user_id, order_describe, order_updateTime ) values (?, ?, ?, ?) 
2020-11-16 16:35:12,762:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - ==> Parameters: 488234192881016832(Long), 8(Integer), sentinel限流，秒杀测试(String), 2020-11-16 16:35:12.761(Timestamp)
2020-11-16 16:35:12,790:DEBUG http-nio-9000-exec-5 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:35:12,791:INFO Derry-Async-3 (AsyncTaskService.java:26) - 线程Derry-Async-3 执行异步任务：8
2020-11-16 16:35:12,819:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:40) - 【ququDemo正常队列 监听到消息,开始消费......】-----> sysUser(id=8, username=null, pwd=null, mobile=null, birthday=null, address=null, integral=null, roleList=[])
2020-11-16 16:35:12,819:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==>  Preparing: update sys_user set integral = integral + 1 where id = ? 
2020-11-16 16:35:12,819:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - ==> Parameters: 8(Integer)
2020-11-16 16:35:12,885:DEBUG org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (BaseJdbcLogger.java:159) - <==    Updates: 1
2020-11-16 16:35:12,885:INFO org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1 (Receiver.java:51) - 【ququDemo正常队列】-----> 消费成功 购物积分已增加
2020-11-16 16:35:12,907:INFO http-nio-9000-exec-2 (RedisController.java:78) - QPS达到阈值：开始限流
2020-11-16 16:35:13,164:INFO http-nio-9000-exec-8 (RedisController.java:78) - QPS达到阈值：开始限流
2020-11-16 16:35:13,312:INFO http-nio-9000-exec-9 (RedisController.java:78) - QPS达到阈值：开始限流
2020-11-16 16:35:13,438:INFO http-nio-9000-exec-10 (RedisController.java:78) - QPS达到阈值：开始限流
2020-11-16 16:35:13,692:INFO http-nio-9000-exec-4 (RedisController.java:78) - QPS达到阈值：开始限流
2020-11-16 16:35:13,820:INFO http-nio-9000-exec-3 (RedisController.java:78) - QPS达到阈值：开始限流
2020-11-16 16:35:52,393:INFO http-nio-9000-exec-8 (RedisController.java:78) - QPS达到阈值：开始限流
2020-11-16 16:35:52,491:INFO http-nio-9000-exec-9 (RedisController.java:78) - QPS达到阈值：开始限流
2020-11-16 16:35:52,738:INFO http-nio-9000-exec-1 (RedisController.java:78) - QPS达到阈值：开始限流
